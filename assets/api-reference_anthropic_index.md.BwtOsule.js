import{_ as a,c as i,o as n,ag as p}from"./chunks/framework.BDwTZuFy.js";const o=JSON.parse('{"title":"Robota - AI 에이전트 프레임워크","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/anthropic/index.md","filePath":"api-reference/anthropic/index.md"}'),l={name:"api-reference/anthropic/index.md"};function e(t,s,h,k,r,d){return n(),i("div",null,s[0]||(s[0]=[p(`<p>Anthropic API / <a href="./modules.html">Exports</a></p><h1 id="robota-ai-에이전트-프레임워크" tabindex="-1">Robota - AI 에이전트 프레임워크 <a class="header-anchor" href="#robota-ai-에이전트-프레임워크" aria-label="Permalink to &quot;Robota - AI 에이전트 프레임워크&quot;">​</a></h1><p>Robota는 JavaScript/TypeScript로 작성된 AI 에이전트 프레임워크입니다. 이 프로젝트는 pnpm 모노레포로 구성되어 있으며, 필요에 따라 bun을 사용하여 예제를 실행할 수 있습니다.</p><h2 id="프로젝트-구조" tabindex="-1">프로젝트 구조 <a class="header-anchor" href="#프로젝트-구조" aria-label="Permalink to &quot;프로젝트 구조&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>robota/</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── packages/         # 라이브러리 패키지</span></span>
<span class="line"><span>│   │   ├── core/         # 핵심 기능</span></span>
<span class="line"><span>│   │   ├── tools/        # 도구 모듈</span></span>
<span class="line"><span>│   │   └── openai/       # OpenAI 통합 모듈</span></span>
<span class="line"><span>│   └── examples/         # 예제 코드</span></span>
<span class="line"><span>│       ├── basic/        # 기본 대화 예제</span></span>
<span class="line"><span>│       ├── function-calling/ # 함수 호출 예제</span></span>
<span class="line"><span>│       ├── tools/        # 도구 사용 예제</span></span>
<span class="line"><span>│       ├── agents/       # 에이전트 예제</span></span>
<span class="line"><span>│       └── mcp/          # MCP 통합 예제</span></span>
<span class="line"><span>├── pnpm-workspace.yaml   # 워크스페이스 설정</span></span>
<span class="line"><span>└── package.json          # 루트 패키지 설정</span></span></code></pre></div><h2 id="설치-방법" tabindex="-1">설치 방법 <a class="header-anchor" href="#설치-방법" aria-label="Permalink to &quot;설치 방법&quot;">​</a></h2><h3 id="요구-사항" tabindex="-1">요구 사항 <a class="header-anchor" href="#요구-사항" aria-label="Permalink to &quot;요구 사항&quot;">​</a></h3><ul><li>Node.js 18 이상</li><li>pnpm 8 이상</li><li>bun 1 이상 (선택 사항)</li></ul><h3 id="설치" tabindex="-1">설치 <a class="header-anchor" href="#설치" aria-label="Permalink to &quot;설치&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm 설치 (아직 설치하지 않은 경우)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># bun 설치 (아직 설치하지 않은 경우)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://bun.sh/install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 의존성 설치</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="예제-실행" tabindex="-1">예제 실행 <a class="header-anchor" href="#예제-실행" aria-label="Permalink to &quot;예제 실행&quot;">​</a></h2><h3 id="pnpm으로-실행" tabindex="-1">pnpm으로 실행 <a class="header-anchor" href="#pnpm으로-실행" aria-label="Permalink to &quot;pnpm으로 실행&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 기본 대화 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:basic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 함수 호출 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:function-calling</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 도구 사용 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 에이전트 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:agents</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 시스템 메시지 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:system-messages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MCP 통합 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:mcp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 모든 예제 실행</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example:all</span></span></code></pre></div><h3 id="bun으로-직접-실행" tabindex="-1">bun으로 직접 실행 <a class="header-anchor" href="#bun으로-직접-실행" aria-label="Permalink to &quot;bun으로 직접 실행&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 예제 디렉토리로 이동</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 기본 대화 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> basic/simple-conversation.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 함수 호출 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function-calling/weather-calculator.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 도구 사용 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/tool-examples.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 에이전트 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> agents/research-agent.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MCP 통합 예제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp/mcp-example.ts</span></span></code></pre></div><h2 id="개발" tabindex="-1">개발 <a class="header-anchor" href="#개발" aria-label="Permalink to &quot;개발&quot;">​</a></h2><h3 id="패키지-빌드" tabindex="-1">패키지 빌드 <a class="header-anchor" href="#패키지-빌드" aria-label="Permalink to &quot;패키지 빌드&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 모든 패키지 빌드</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 핵심 의존성 먼저 빌드</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:deps</span></span></code></pre></div><h3 id="타입-체크" tabindex="-1">타입 체크 <a class="header-anchor" href="#타입-체크" aria-label="Permalink to &quot;타입 체크&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typecheck</span></span></code></pre></div><h2 id="환경-변수" tabindex="-1">환경 변수 <a class="header-anchor" href="#환경-변수" aria-label="Permalink to &quot;환경 변수&quot;">​</a></h2><p>예제를 실행하기 위해서는 <code>.env</code> 파일을 생성하고 필요한 환경 변수를 설정해야 합니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># OpenAI API 키 (필수)</span></span>
<span class="line"><span>OPENAI_API_KEY=your_api_key_here</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 날씨 API 키 (선택 사항)</span></span>
<span class="line"><span>WEATHER_API_KEY=your_weather_api_key_here</span></span>
<span class="line"><span></span></span>
<span class="line"><span># MCP API 키 (MCP 예제 실행 시 필요)</span></span>
<span class="line"><span>MCP_API_KEY=your_mcp_api_key_here</span></span></code></pre></div><h2 id="주요-기능" tabindex="-1">주요 기능 <a class="header-anchor" href="#주요-기능" aria-label="Permalink to &quot;주요 기능&quot;">​</a></h2><h3 id="model-context-protocol-mcp-지원" tabindex="-1">Model Context Protocol (MCP) 지원 <a class="header-anchor" href="#model-context-protocol-mcp-지원" aria-label="Permalink to &quot;Model Context Protocol (MCP) 지원&quot;">​</a></h3><p>Robota는 이제 Model Context Protocol을 지원합니다. MCP를 통해 다양한 AI 모델 제공자와 표준화된 방식으로 통신할 수 있습니다:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Robota, createMcpToolProvider } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;robota&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Client, StdioClientTransport } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@modelcontextprotocol/sdk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MCP 클라이언트 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> transport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StdioClientTransport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 설정 */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mcpClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(transport);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MCP 제공자 초기화</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createMcpToolProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mcpClient, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 사용할 모델 이름</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Robota 인스턴스에 제공자 연결</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ provider });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 실행</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;안녕하세요! MCP를 통해 연결된 AI 모델과 대화 중입니다.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="라이선스" tabindex="-1">라이선스 <a class="header-anchor" href="#라이선스" aria-label="Permalink to &quot;라이선스&quot;">​</a></h2><p>MIT</p>`,29)]))}const g=a(l,[["render",e]]);export{o as __pageData,g as default};
