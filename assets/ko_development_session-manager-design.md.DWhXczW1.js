import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.BDwTZuFy.js";const E=JSON.parse('{"title":"SessionManager 설계 문서","description":"Robota 세션 및 채팅 관리를 위한 SessionManager 설계 및 구현 계획","frontmatter":{"title":"SessionManager 설계 문서","description":"Robota 세션 및 채팅 관리를 위한 SessionManager 설계 및 구현 계획","lang":"ko-KR","date":"2024-12-XX"},"headers":[],"relativePath":"ko/development/session-manager-design.md","filePath":"ko/development/session-manager-design.md"}'),l={name:"ko/development/session-manager-design.md"};function h(p,s,t,k,r,o){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="sessionmanager-설계-문서" tabindex="-1">SessionManager 설계 문서 <a class="header-anchor" href="#sessionmanager-설계-문서" aria-label="Permalink to &quot;SessionManager 설계 문서&quot;">​</a></h1><p>이 문서는 Robota 프로젝트의 SessionManager 개발을 위한 전체적인 설계와 구현 계획을 다룹니다.</p><h2 id="✅-완료된-작업" tabindex="-1">✅ 완료된 작업 <a class="header-anchor" href="#✅-완료된-작업" aria-label="Permalink to &quot;✅ 완료된 작업&quot;">​</a></h2><h3 id="phase-1-프로젝트-기본-구조-생성-✅" tabindex="-1">Phase 1: 프로젝트 기본 구조 생성 ✅ <a class="header-anchor" href="#phase-1-프로젝트-기본-구조-생성-✅" aria-label="Permalink to &quot;Phase 1: 프로젝트 기본 구조 생성 ✅&quot;">​</a></h3><ul><li>[x] 패키지 디렉토리 구조 생성</li><li>[x] package.json, tsconfig.json, tsup.config.ts 설정</li><li>[x] 기본 타입 정의 (SessionManager, Session, ChatInstance, Storage, Events)</li><li>[x] Enhanced ConversationHistory 구현</li><li>[x] ChatInstance 기본 구현</li><li>[x] 빌드 시스템 설정 완료</li></ul><h3 id="phase-2-핵심-클래스-구현-✅" tabindex="-1">Phase 2: 핵심 클래스 구현 ✅ <a class="header-anchor" href="#phase-2-핵심-클래스-구현-✅" aria-label="Permalink to &quot;Phase 2: 핵심 클래스 구현 ✅&quot;">​</a></h3><ul><li>[x] Session 클래스 완성 구현</li><li>[x] SessionManager 클래스 기본 구현</li><li>[x] 세션 생성/조회/삭제 기능</li><li>[x] 채팅 관리 및 전환 기능</li><li>[x] 간단한 메모리 관리 및 통계</li></ul><h2 id="🎯-핵심-요구사항-간소화" tabindex="-1">🎯 핵심 요구사항 (간소화) <a class="header-anchor" href="#🎯-핵심-요구사항-간소화" aria-label="Permalink to &quot;🎯 핵심 요구사항 (간소화)&quot;">​</a></h2><ol><li><strong>멀티 세션 관리</strong>: 사용자별로 독립적인 작업 공간(Session) 관리</li><li><strong>세션 내 채팅 관리</strong>: 하나의 세션에서 여러 채팅 히스토리 보관 및 전환</li><li><strong>단일 활성 채팅</strong>: 세션 내에서 한 번에 하나의 채팅만 활성화</li><li><strong>세션 격리</strong>: 세션 간 완전한 독립성 보장</li></ol><h3 id="개념-구조" tabindex="-1">개념 구조 <a class="header-anchor" href="#개념-구조" aria-label="Permalink to &quot;개념 구조&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>User (사용자)</span></span>
<span class="line"><span>├── Session A (작업 공간 1)</span></span>
<span class="line"><span>│   ├── Chat 1 (활성) ← 현재 대화 중</span></span>
<span class="line"><span>│   ├── Chat 2 (비활성) </span></span>
<span class="line"><span>│   └── Chat 3 (비활성)</span></span>
<span class="line"><span>├── Session B (작업 공간 2)</span></span>
<span class="line"><span>│   ├── Chat 1 (활성) ← 이 세션의 현재 채팅</span></span>
<span class="line"><span>│   └── Chat 2 (비활성)</span></span></code></pre></div><h2 id="🏗️-간소화된-아키텍처" tabindex="-1">🏗️ 간소화된 아키텍처 <a class="header-anchor" href="#🏗️-간소화된-아키텍처" aria-label="Permalink to &quot;🏗️ 간소화된 아키텍처&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@robota-sdk/sessions</span></span>
<span class="line"><span>├── SessionManager (세션 관리자)</span></span>
<span class="line"><span>│   ├── Session A (작업 공간)</span></span>
<span class="line"><span>│   │   ├── ChatInstance 1 (활성) - Robota + Enhanced History</span></span>
<span class="line"><span>│   │   ├── ChatInstance 2 (비활성)</span></span>
<span class="line"><span>│   │   └── ChatInstance 3 (비활성)</span></span>
<span class="line"><span>│   ├── Session B</span></span>
<span class="line"><span>│   │   ├── ChatInstance 1 (활성)</span></span>
<span class="line"><span>│   │   └── ChatInstance 2 (비활성)</span></span></code></pre></div><h2 id="💡-기본-사용-예시" tabindex="-1">💡 기본 사용 예시 <a class="header-anchor" href="#💡-기본-사용-예시" aria-label="Permalink to &quot;💡 기본 사용 예시&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { SessionManagerImpl } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/sessions&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Robota } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { OpenAIProvider } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1. SessionManager 초기화</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sessionManager</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SessionManagerImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  maxActiveSessions: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2. 새 세션(작업 공간) 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> workSession</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sessionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sessionName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Python Development&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3. 첫 번째 채팅 생성 (자동으로 활성화됨)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debugChat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> workSession.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createNewChat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chatName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Debug Session&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  robotaConfig: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: { openai: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAIProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* config */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentProvider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentModel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4. 채팅 시작</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debugChat.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Help me debug this Python error: ...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5. 같은 세션에서 새 채팅 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> featureChat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> workSession.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createNewChat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chatName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Feature Development&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// featureChat이 활성화되고, debugChat은 비활성화됨</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 6. 이전 채팅으로 전환</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> workSession.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">switchToChat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debugChat.metadata.chatId);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debugChat.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Continue debugging...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="📅-남은-구현-계획" tabindex="-1">📅 남은 구현 계획 <a class="header-anchor" href="#📅-남은-구현-계획" aria-label="Permalink to &quot;📅 남은 구현 계획&quot;">​</a></h2><h3 id="phase-3-간단한-저장소-구현-우선순위-⚡" tabindex="-1">Phase 3: 간단한 저장소 구현 (우선순위: ⚡) <a class="header-anchor" href="#phase-3-간단한-저장소-구현-우선순위-⚡" aria-label="Permalink to &quot;Phase 3: 간단한 저장소 구현 (우선순위: ⚡)&quot;">​</a></h3><ul><li>[ ] MemoryStorage 구현체</li><li>[ ] 기본 pause/resume 기능</li></ul><h3 id="phase-4-예제-및-문서화-우선순위-⚡" tabindex="-1">Phase 4: 예제 및 문서화 (우선순위: ⚡) <a class="header-anchor" href="#phase-4-예제-및-문서화-우선순위-⚡" aria-label="Permalink to &quot;Phase 4: 예제 및 문서화 (우선순위: ⚡)&quot;">​</a></h3><ul><li>[ ] 기본 사용법 예제</li><li>[ ] 패키지 README.md 작성</li></ul><h3 id="phase-5-테스트-우선순위-⚡" tabindex="-1">Phase 5: 테스트 (우선순위: ⚡) <a class="header-anchor" href="#phase-5-테스트-우선순위-⚡" aria-label="Permalink to &quot;Phase 5: 테스트 (우선순위: ⚡)&quot;">​</a></h3><ul><li>[ ] 기본 유닛 테스트</li><li>[ ] 통합 테스트</li></ul><p><strong>총 예상 소요시간</strong>: 2-3주</p><hr><p><em>마지막 업데이트: 2024년 12월</em></p>`,25)]))}const g=a(l,[["render",h]]);export{E as __pageData,g as default};
