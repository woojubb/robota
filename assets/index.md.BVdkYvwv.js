import{_ as i,c as e,o as s,ag as t}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"Robota SDK Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),n={name:"index.md"};function l(r,a,o,h,p,d){return s(),e("div",null,a[0]||(a[0]=[t(`<h1 id="robota-sdk-documentation" tabindex="-1">Robota SDK Documentation <a class="header-anchor" href="#robota-sdk-documentation" aria-label="Permalink to &quot;Robota SDK Documentation&quot;">​</a></h1><p>A powerful TypeScript library for building AI agents with multi-provider support, built with a modular Manager pattern architecture.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Multi-Provider Support</strong>: OpenAI, Anthropic, Google AI with easy provider switching</li><li><strong>Manager Pattern Architecture</strong>: Clean separation with AIProviderManager, ToolProviderManager, SystemMessageManager, etc.</li><li><strong>Type-Safe Function Calling</strong>: Zod-based tools, MCP integration, OpenAPI support</li><li><strong>Conversation Management</strong>: Built-in history management with configurable limits</li><li><strong>Analytics &amp; Monitoring</strong>: Request tracking, token usage analytics, limit management</li><li><strong>Streaming Support</strong>: Real-time streaming across all providers</li></ul><h2 id="documentation-structure" tabindex="-1">Documentation Structure <a class="header-anchor" href="#documentation-structure" aria-label="Permalink to &quot;Documentation Structure&quot;">​</a></h2><h3 id="main-documentation" tabindex="-1">Main Documentation <a class="header-anchor" href="#main-documentation" aria-label="Permalink to &quot;Main Documentation&quot;">​</a></h3><ul><li><a href="./">Home</a> - Overview and quick start guide</li><li><a href="./providers.html">AI Providers &amp; Tools</a> - Learn about supported providers and tools</li><li><a href="./examples/examples.html">Examples</a> - Comprehensive examples and tutorials</li><li><a href="./api-reference.html">API Reference</a> - Complete API documentation</li></ul><h3 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h3><ul><li><a href="./environment-setup.html">Environment Setup</a> - Detailed setup instructions</li><li><a href="./development-guidelines.html">Development Guidelines</a> - Architecture patterns and best practices</li></ul><h3 id="core-documentation" tabindex="-1">Core Documentation <a class="header-anchor" href="#core-documentation" aria-label="Permalink to &quot;Core Documentation&quot;">​</a></h3><ul><li><a href="./development-guidelines.html#architecture-patterns">Architecture Overview</a> - Manager pattern and service layer</li><li><a href="./system-messages.html">System Messages</a> - System message management strategies</li></ul><h3 id="package-documentation" tabindex="-1">Package Documentation <a class="header-anchor" href="#package-documentation" aria-label="Permalink to &quot;Package Documentation&quot;">​</a></h3><ul><li><a href="./packages/core/README.html">Core Package</a> - Core functionality with Manager pattern</li><li><a href="./packages/openai/README.html">OpenAI Package</a> - OpenAI provider integration</li><li><a href="./packages/anthropic/README.html">Anthropic Package</a> - Anthropic provider integration</li><li><a href="./packages/google/README.html">Google Package</a> - Google AI provider integration</li><li><a href="./packages/tools/README.html">Tools Package</a> - Function calling and tool providers</li></ul><h3 id="development-standards" tabindex="-1">Development Standards <a class="header-anchor" href="#development-standards" aria-label="Permalink to &quot;Development Standards&quot;">​</a></h3><ul><li><a href="./testing-guidelines.html">Testing Guidelines</a> - Mock usage and test organization</li><li><a href="./build-and-deployment.html">Build and Deployment</a> - Build configuration and CI/CD</li><li><a href="./code-quality-standards.html">Code Quality Standards</a> - Linting and console output guidelines</li><li><a href="./code-improvements.html">Code Improvements</a> - Implementation patterns and refactoring</li></ul><h3 id="advanced-topics" tabindex="-1">Advanced Topics <a class="header-anchor" href="#advanced-topics" aria-label="Permalink to &quot;Advanced Topics&quot;">​</a></h3><ul><li><a href="./openapi-integration.html">OpenAPI Integration</a> - OpenAPI tool integration</li><li><a href="./package-publishing.html">Package Publishing</a> - Package publishing guidelines</li><li><a href="./documentation-site-setup.html">Documentation Site Setup</a> - Documentation website setup</li></ul><h3 id="project-management" tabindex="-1">Project Management <a class="header-anchor" href="#project-management" aria-label="Permalink to &quot;Project Management&quot;">​</a></h3><ul><li><a href="./roadmap.html">Roadmap</a> - Project roadmap and future plans</li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Robota, OpenAIProvider } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> openaiClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ apiKey: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OPENAI_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> openaiProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAIProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(openaiClient);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: openaiProvider },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentProvider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentModel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    systemPrompt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;You are a helpful AI assistant.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello! How can I help you today?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response);</span></span></code></pre></div><h2 id="quick-links" tabindex="-1">Quick Links <a class="header-anchor" href="#quick-links" aria-label="Permalink to &quot;Quick Links&quot;">​</a></h2><ul><li><strong>Examples</strong>: Check out comprehensive examples in <a href="./examples/examples.html"><code>apps/examples</code></a></li><li><strong>Providers</strong>: Learn about <a href="./providers.html">AI Providers &amp; Tools</a></li><li><strong>Architecture</strong>: Understand the <a href="./development-guidelines.html#architecture-patterns">Manager Pattern</a></li><li><strong>Contributing</strong>: Read our <a href="./development-guidelines.html">Development Guidelines</a></li></ul><h2 id="current-version" tabindex="-1">Current Version <a class="header-anchor" href="#current-version" aria-label="Permalink to &quot;Current Version&quot;">​</a></h2><p>Core package: v0.3.2 - Latest stable release with Manager pattern architecture</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>MIT License - see LICENSE file for details.</p>`,27)]))}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
