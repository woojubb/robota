import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Guide","description":"Robota SDK Documentation Guide","frontmatter":{"title":"Guide","description":"Robota SDK Documentation Guide","lang":"en-US"},"headers":[],"relativePath":"guide/index.md","filePath":"guide/README.md"}'),t={name:"guide/index.md"};function l(p,s,h,r,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="robota-sdk-guide" tabindex="-1">Robota SDK Guide <a class="header-anchor" href="#robota-sdk-guide" aria-label="Permalink to &quot;Robota SDK Guide&quot;">​</a></h1><p>Comprehensive guide to building AI agents with the Robota SDK.</p><h2 id="what-is-robota-sdk" tabindex="-1">What is Robota SDK? <a class="header-anchor" href="#what-is-robota-sdk" aria-label="Permalink to &quot;What is Robota SDK?&quot;">​</a></h2><p>Robota SDK is a TypeScript-first library for building sophisticated AI agents with:</p><ul><li><strong>🔥 Unified Architecture</strong>: Everything you need in <code>@robota-sdk/agents</code></li><li><strong>⚡ Type-Safe</strong>: Zero <code>any</code> types, complete TypeScript safety</li><li><strong>🔌 Multi-Provider</strong>: OpenAI, Anthropic, Google AI with seamless switching</li><li><strong>🛠️ Advanced Tools</strong>: Type-safe function calling and tool integration</li><li><strong>📊 Built-in Analytics</strong>: Performance monitoring and usage tracking</li><li><strong>🌊 Real-time Streaming</strong>: Streaming responses across all providers</li><li><strong>🤝 Team Collaboration</strong>: Multi-agent workflows and task assignment</li><li><strong>🧠 Future Planning</strong>: Advanced planning strategies on the roadmap</li></ul><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><p>The Robota SDK v2.0 is built around a unified agents package that includes:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@robota-sdk/agents (Core Package)</span></span>
<span class="line"><span>├── 🤖 BaseAgent           # Foundation for all agents</span></span>
<span class="line"><span>├── 🔌 BaseAIProvider      # Multi-provider abstraction</span></span>
<span class="line"><span>├── 🛠️ BaseTool            # Tool system foundation</span></span>
<span class="line"><span>├── 📊 Plugin System       # Extensible plugin architecture</span></span>
<span class="line"><span>├── 🏭 AgentFactory        # Agent creation and templates</span></span>
<span class="line"><span>├── 📈 Analytics           # Performance and usage tracking</span></span>
<span class="line"><span>└── 🔧 Utilities           # Type-safe utilities</span></span></code></pre></div><h2 id="learning-path" tabindex="-1">Learning Path <a class="header-anchor" href="#learning-path" aria-label="Permalink to &quot;Learning Path&quot;">​</a></h2><h3 id="_1-🚀-getting-started" tabindex="-1">1. 🚀 Getting Started <a class="header-anchor" href="#_1-🚀-getting-started" aria-label="Permalink to &quot;1. 🚀 Getting Started&quot;">​</a></h3><p><strong>Perfect for</strong>: First-time users, quick prototypes</p><p>Start here to create your first AI agent and understand basic concepts.</p><ul><li><strong><a href="./../getting-started/README.html">Getting Started</a></strong> - Installation, setup, and first agent</li><li><strong><a href="./../examples/basic-conversation.html">Basic Examples</a></strong> - Simple conversation patterns</li></ul><h3 id="_2-🧠-core-concepts" tabindex="-1">2. 🧠 Core Concepts <a class="header-anchor" href="#_2-🧠-core-concepts" aria-label="Permalink to &quot;2. 🧠 Core Concepts&quot;">​</a></h3><p><strong>Perfect for</strong>: Understanding the architecture, building robust applications</p><p>Learn the fundamental concepts and architecture patterns.</p><ul><li><strong><a href="./core-concepts.html">Core Concepts</a></strong> - Architecture and design patterns</li><li><strong><a href="./architecture.html">Architecture Guide</a></strong> - Complete architecture overview and extension guide</li><li><strong><a href="./building-agents.html">Building Agents</a></strong> - Agent development best practices</li></ul><h3 id="_3-🛠️-advanced-features" tabindex="-1">3. 🛠️ Advanced Features <a class="header-anchor" href="#_3-🛠️-advanced-features" aria-label="Permalink to &quot;3. 🛠️ Advanced Features&quot;">​</a></h3><p><strong>Perfect for</strong>: Complex applications, production deployments</p><p>Master advanced features like tools, streaming, and analytics.</p><ul><li><strong><a href="./function-calling.html">Function Calling</a></strong> - Tool integration and custom functions</li><li><strong><a href="./../examples/multi-provider.html">Multi-Provider</a></strong> - Provider switching and management</li><li><strong><a href="./../examples/team-collaboration.html">Team Collaboration</a></strong> - Multi-agent workflows</li></ul><h3 id="_4-🏗️-production-ready" tabindex="-1">4. 🏗️ Production Ready <a class="header-anchor" href="#_4-🏗️-production-ready" aria-label="Permalink to &quot;4. 🏗️ Production Ready&quot;">​</a></h3><p><strong>Perfect for</strong>: Production deployments, enterprise applications</p><p>Learn about monitoring, error handling, and deployment strategies.</p><ul><li><strong><a href="./../examples/execution-analytics.html">Performance Monitoring</a></strong> - Analytics and monitoring</li><li><strong><a href="./../development/error-handling-guidelines.html">Error Handling</a></strong> - Robust error handling</li><li><strong><a href="./../development/README.html">Development Guidelines</a></strong> - Best practices and standards</li></ul><h2 id="key-features-deep-dive" tabindex="-1">Key Features Deep Dive <a class="header-anchor" href="#key-features-deep-dive" aria-label="Permalink to &quot;Key Features Deep Dive&quot;">​</a></h2><h3 id="type-safe-architecture" tabindex="-1">Type-Safe Architecture <a class="header-anchor" href="#type-safe-architecture" aria-label="Permalink to &quot;Type-Safe Architecture&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Zero &#39;any&#39; types - complete TypeScript safety</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> agent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TypeSafeAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-3.5-turbo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        systemMessage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;You are a helpful assistant.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="multi-provider-support" tabindex="-1">Multi-Provider Support <a class="header-anchor" href="#multi-provider-support" aria-label="Permalink to &quot;Multi-Provider Support&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Switch between providers seamlessly</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;anthropic&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;claude-3-haiku-20240307&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;google&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gemini-1.5-flash&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h3 id="advanced-plugin-system" tabindex="-1">Advanced Plugin System <a class="header-anchor" href="#advanced-plugin-system" aria-label="Permalink to &quot;Advanced Plugin System&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Extensible plugin architecture</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> agent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PluginAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-3.5-turbo&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugins: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecutionAnalyticsPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConversationHistoryPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LoggingPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="real-time-streaming" tabindex="-1">Real-time Streaming <a class="header-anchor" href="#real-time-streaming" aria-label="Permalink to &quot;Real-time Streaming&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Streaming responses with full type safety</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stream</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Explain quantum computing&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stream) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Type-safe streaming</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="quick-reference" tabindex="-1">Quick Reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick Reference&quot;">​</a></h2><h3 id="essential-classes" tabindex="-1">Essential Classes <a class="header-anchor" href="#essential-classes" aria-label="Permalink to &quot;Essential Classes&quot;">​</a></h3><ul><li><strong><code>Robota</code></strong> - Main agent class</li><li><strong><code>AgentFactory</code></strong> - Create agents from templates</li><li><strong><code>ExecutionAnalyticsPlugin</code></strong> - Performance monitoring</li><li><strong><code>ConversationHistoryPlugin</code></strong> - Conversation management</li></ul><h3 id="ai-providers" tabindex="-1">AI Providers <a class="header-anchor" href="#ai-providers" aria-label="Permalink to &quot;AI Providers&quot;">​</a></h3><ul><li><strong><code>OpenAIProvider</code></strong> - GPT models (3.5, 4, 4o-mini)</li><li><strong><code>AnthropicProvider</code></strong> - Claude models (Haiku, Sonnet, Opus)</li><li><strong><code>GoogleProvider</code></strong> - Gemini models (1.5 Flash, Pro)</li></ul><h3 id="tool-system" tabindex="-1">Tool System <a class="header-anchor" href="#tool-system" aria-label="Permalink to &quot;Tool System&quot;">​</a></h3><ul><li><strong><code>createFunctionTool</code></strong> - Create type-safe tools</li><li><strong><code>ToolRegistry</code></strong> - Manage and organize tools</li><li><strong><code>MCP Integration</code></strong> - Model Context Protocol support</li></ul><h2 id="examples-by-use-case" tabindex="-1">Examples by Use Case <a class="header-anchor" href="#examples-by-use-case" aria-label="Permalink to &quot;Examples by Use Case&quot;">​</a></h2><h3 id="🤖-simple-ai-assistant" tabindex="-1">🤖 Simple AI Assistant <a class="header-anchor" href="#🤖-simple-ai-assistant" aria-label="Permalink to &quot;🤖 Simple AI Assistant&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> assistant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Assistant&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-3.5-turbo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        systemMessage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;You are a helpful assistant.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="🔧-ai-with-tools" tabindex="-1">🔧 AI with Tools <a class="header-anchor" href="#🔧-ai-with-tools" aria-label="Permalink to &quot;🔧 AI with Tools&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> toolAgent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ToolAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-3.5-turbo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        systemMessage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;You have access to calculation and weather tools.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tools: [calculatorTool, weatherTool]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="📊-monitored-ai-agent" tabindex="-1">📊 Monitored AI Agent <a class="header-anchor" href="#📊-monitored-ai-agent" aria-label="Permalink to &quot;📊 Monitored AI Agent&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> monitoredAgent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MonitoredAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-3.5-turbo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        systemMessage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;You are monitored for performance.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugins: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecutionAnalyticsPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="🤝-team-of-agents" tabindex="-1">🤝 Team of Agents <a class="header-anchor" href="#🤝-team-of-agents" aria-label="Permalink to &quot;🤝 Team of Agents&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createTeam } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/team&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> team</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createTeam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aiProviders: [openaiProvider, anthropicProvider],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxMembers: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    debug: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Team intelligently delegates to specialist agents</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> team.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;Research and write about renewable energy trends&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="🧠-future-advanced-planning" tabindex="-1">🧠 Future: Advanced Planning <a class="header-anchor" href="#🧠-future-advanced-planning" aria-label="Permalink to &quot;🧠 Future: Advanced Planning&quot;">​</a></h3><p>Coming soon - sophisticated planning strategies for complex autonomous workflows:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Future roadmap - Advanced Planning System</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createPlanner } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/planning&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ReActPlanner, CAMELPlanner } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/planner-strategies&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This is planned for future releases</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> planner</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createPlanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strategies: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReActPlanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CAMELPlanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    executionMode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;adaptive&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> planner.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Build a complete web application&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="✅-do" tabindex="-1">✅ Do <a class="header-anchor" href="#✅-do" aria-label="Permalink to &quot;✅ Do&quot;">​</a></h3><ul><li>Use TypeScript for full type safety</li><li>Implement proper error handling with try/catch</li><li>Monitor performance with analytics plugins</li><li>Clean up resources with <code>agent.destroy()</code></li><li>Use specific models for specific tasks</li></ul><h3 id="❌-don-t" tabindex="-1">❌ Don&#39;t <a class="header-anchor" href="#❌-don-t" aria-label="Permalink to &quot;❌ Don&#39;t&quot;">​</a></h3><ul><li>Ignore TypeScript errors or use <code>any</code> types</li><li>Forget to handle API rate limits</li><li>Skip error handling in production</li><li>Leave agents running without cleanup</li><li>Use overpowered models for simple tasks</li></ul><h2 id="migration-guide" tabindex="-1">Migration Guide <a class="header-anchor" href="#migration-guide" aria-label="Permalink to &quot;Migration Guide&quot;">​</a></h2><h3 id="from-v1-x-to-v2-0" tabindex="-1">From v1.x to v2.0 <a class="header-anchor" href="#from-v1-x-to-v2-0" aria-label="Permalink to &quot;From v1.x to v2.0&quot;">​</a></h3><p>The major changes in v2.0:</p><ol><li><strong>Unified Package</strong>: Everything moved to <code>@robota-sdk/agents</code></li><li><strong>API Changes</strong>: <code>systemPrompt</code> → <code>systemMessage</code>, <code>close()</code> → <code>destroy()</code></li><li><strong>Type Safety</strong>: Complete removal of <code>any</code> types</li><li><strong>Plugin System</strong>: New extensible architecture</li></ol><p>See <a href="./../development/code-improvements.html">Migration Guide</a> for detailed upgrade steps.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Ready to build your first agent? Start with:</p><ol><li><strong><a href="./../getting-started/README.html">Getting Started</a></strong> - Set up your development environment</li><li><strong><a href="./../examples/README.html">Basic Examples</a></strong> - Follow along with working code</li><li><strong><a href="./../api-reference/README.html">API Reference</a></strong> - Explore the complete API</li></ol><p>Need help? Check out our <strong><a href="./../development/README.html">Development Guide</a></strong> for contributing and advanced development topics.</p><h2 id="documentation-sections" tabindex="-1">Documentation Sections <a class="header-anchor" href="#documentation-sections" aria-label="Permalink to &quot;Documentation Sections&quot;">​</a></h2><ul><li><strong><a href="./../getting-started/README.html">Getting Started</a></strong> - Quick setup and basic usage</li><li><strong><a href="./core-concepts.html">Core Concepts</a></strong> - Understanding the Manager pattern architecture</li><li><strong><a href="./function-calling.html">Function Calling</a></strong> - Tool integration and function calling</li><li><strong><a href="./building-agents.html">Building Agents</a></strong> - Advanced agent development patterns</li></ul><h2 id="quick-navigation" tabindex="-1">Quick Navigation <a class="header-anchor" href="#quick-navigation" aria-label="Permalink to &quot;Quick Navigation&quot;">​</a></h2><p>Use the navigation on the left to explore the complete documentation or jump straight to:</p><ul><li><a href="./../getting-started/README.html">Getting Started</a> - Begin with basic setup</li><li><a href="./../development/development-guidelines.html#architecture-patterns">Architecture Overview</a> - Understand the Manager pattern</li><li><a href="./../examples/README.html">Examples</a> - See real-world usage patterns</li></ul>`,72)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
