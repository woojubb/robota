import{_ as a,c as e,o as i,ag as n}from"./chunks/framework.BDwTZuFy.js";const k=JSON.parse('{"title":"Setup and Prerequisites","description":"","frontmatter":{},"headers":[],"relativePath":"examples/setup.md","filePath":"examples/setup.md"}'),t={name:"examples/setup.md"};function l(p,s,o,r,h,d){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="setup-and-prerequisites" tabindex="-1">Setup and Prerequisites <a class="header-anchor" href="#setup-and-prerequisites" aria-label="Permalink to &quot;Setup and Prerequisites&quot;">​</a></h1><p>This guide covers the initial setup required to run Robota SDK examples.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><h3 id="node-js-and-package-manager" tabindex="-1">Node.js and Package Manager <a class="header-anchor" href="#node-js-and-package-manager" aria-label="Permalink to &quot;Node.js and Package Manager&quot;">​</a></h3><p>Ensure you have the following installed:</p><ul><li><strong>Node.js</strong> 18+</li><li><strong>pnpm</strong> (recommended) or npm</li><li><strong>bun</strong> (optional, for faster execution)</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install pnpm if not already installed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install bun (optional, for faster TypeScript execution)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://bun.sh/install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h3 id="install-dependencies" tabindex="-1">Install Dependencies <a class="header-anchor" href="#install-dependencies" aria-label="Permalink to &quot;Install Dependencies&quot;">​</a></h3><p>From the project root:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="environment-configuration" tabindex="-1">Environment Configuration <a class="header-anchor" href="#environment-configuration" aria-label="Permalink to &quot;Environment Configuration&quot;">​</a></h2><h3 id="required-api-keys" tabindex="-1">Required API Keys <a class="header-anchor" href="#required-api-keys" aria-label="Permalink to &quot;Required API Keys&quot;">​</a></h3><p>Create a <code>.env</code> file in the project root with your API keys:</p><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Required for most examples</span></span>
<span class="line"><span>OPENAI_API_KEY=your_openai_api_key_here</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional - for multi-provider examples</span></span>
<span class="line"><span>ANTHROPIC_API_KEY=your_anthropic_api_key_here</span></span>
<span class="line"><span>GOOGLE_API_KEY=your_google_api_key_here</span></span></code></pre></div><h3 id="getting-api-keys" tabindex="-1">Getting API Keys <a class="header-anchor" href="#getting-api-keys" aria-label="Permalink to &quot;Getting API Keys&quot;">​</a></h3><h4 id="openai-api-key" tabindex="-1">OpenAI API Key <a class="header-anchor" href="#openai-api-key" aria-label="Permalink to &quot;OpenAI API Key&quot;">​</a></h4><ol><li>Visit <a href="https://platform.openai.com/" target="_blank" rel="noreferrer">OpenAI Platform</a></li><li>Sign up or log in to your account</li><li>Navigate to API Keys section</li><li>Create a new API key</li><li>Copy the key to your <code>.env</code> file</li></ol><h4 id="anthropic-api-key-optional" tabindex="-1">Anthropic API Key (Optional) <a class="header-anchor" href="#anthropic-api-key-optional" aria-label="Permalink to &quot;Anthropic API Key (Optional)&quot;">​</a></h4><ol><li>Visit <a href="https://console.anthropic.com/" target="_blank" rel="noreferrer">Anthropic Console</a></li><li>Sign up or log in</li><li>Navigate to API Keys</li><li>Create a new key</li><li>Add to your <code>.env</code> file</li></ol><h4 id="google-ai-api-key-optional" tabindex="-1">Google AI API Key (Optional) <a class="header-anchor" href="#google-ai-api-key-optional" aria-label="Permalink to &quot;Google AI API Key (Optional)&quot;">​</a></h4><ol><li>Visit <a href="https://makersuite.google.com/" target="_blank" rel="noreferrer">Google AI Studio</a></li><li>Sign in with your Google account</li><li>Create a new API key</li><li>Add to your <code>.env</code> file</li></ol><h2 id="directory-structure" tabindex="-1">Directory Structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;Directory Structure&quot;">​</a></h2><p>Understanding the example structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>robota/</span></span>
<span class="line"><span>├── apps/examples/           # Example source code</span></span>
<span class="line"><span>│   ├── 01-basic/           # Basic usage examples</span></span>
<span class="line"><span>│   ├── 02-functions/       # Function tool examples</span></span>
<span class="line"><span>│   ├── 03-integrations/    # Integration examples</span></span>
<span class="line"><span>│   └── 04-sessions/        # Session management examples</span></span>
<span class="line"><span>├── docs/examples/          # This documentation</span></span>
<span class="line"><span>└── packages/               # SDK packages</span></span>
<span class="line"><span>    ├── core/              # Core SDK</span></span>
<span class="line"><span>    ├── tools/             # Tool providers</span></span>
<span class="line"><span>    └── sessions/          # Session management</span></span></code></pre></div><h2 id="running-examples" tabindex="-1">Running Examples <a class="header-anchor" href="#running-examples" aria-label="Permalink to &quot;Running Examples&quot;">​</a></h2><h3 id="method-1-direct-execution-recommended" tabindex="-1">Method 1: Direct Execution (Recommended) <a class="header-anchor" href="#method-1-direct-execution-recommended" aria-label="Permalink to &quot;Method 1: Direct Execution (Recommended)&quot;">​</a></h3><p>Navigate to the examples directory and run TypeScript files directly:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Navigate to examples</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run with bun (fastest)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01-basic/01-simple-conversation.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or with pnpm + tsx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01-basic/01-simple-conversation.ts</span></span></code></pre></div><h3 id="method-2-using-package-scripts" tabindex="-1">Method 2: Using Package Scripts <a class="header-anchor" href="#method-2-using-package-scripts" aria-label="Permalink to &quot;Method 2: Using Package Scripts&quot;">​</a></h3><p>Some examples have predefined npm scripts:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run specific examples</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:simple-conversation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:ai-with-tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run example groups</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:all-basic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:all-examples</span></span></code></pre></div><h2 id="verification" tabindex="-1">Verification <a class="header-anchor" href="#verification" aria-label="Permalink to &quot;Verification&quot;">​</a></h2><p>Test your setup with the simplest example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/examples</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01-basic/01-simple-conversation.ts</span></span></code></pre></div><p>Expected output:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>===== Simple Conversation Example =====</span></span>
<span class="line"><span>Response: [AI response about TypeScript]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>===== Streaming Response Example =====</span></span>
<span class="line"><span>Response: [Streaming AI response about TypeScript advantages]</span></span></code></pre></div><h2 id="troubleshooting-setup-issues" tabindex="-1">Troubleshooting Setup Issues <a class="header-anchor" href="#troubleshooting-setup-issues" aria-label="Permalink to &quot;Troubleshooting Setup Issues&quot;">​</a></h2><h3 id="common-problems" tabindex="-1">Common Problems <a class="header-anchor" href="#common-problems" aria-label="Permalink to &quot;Common Problems&quot;">​</a></h3><h4 id="_1-missing-dependencies" tabindex="-1">1. Missing Dependencies <a class="header-anchor" href="#_1-missing-dependencies" aria-label="Permalink to &quot;1. Missing Dependencies&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Reinstall dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h4 id="_2-api-key-issues" tabindex="-1">2. API Key Issues <a class="header-anchor" href="#_2-api-key-issues" aria-label="Permalink to &quot;2. API Key Issues&quot;">​</a></h4><ul><li>Verify API keys are correctly set in <code>.env</code></li><li>Check for extra spaces or quotes around keys</li><li>Ensure <code>.env</code> is in the project root, not in examples directory</li></ul><h4 id="_3-typescript-execution-errors" tabindex="-1">3. TypeScript Execution Errors <a class="header-anchor" href="#_3-typescript-execution-errors" aria-label="Permalink to &quot;3. TypeScript Execution Errors&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install tsx globally if needed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or use npx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01-basic/01-simple-conversation.ts</span></span></code></pre></div><h4 id="_4-module-resolution-issues" tabindex="-1">4. Module Resolution Issues <a class="header-anchor" href="#_4-module-resolution-issues" aria-label="Permalink to &quot;4. Module Resolution Issues&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build packages first</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or run from project root</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../../</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/examples/01-basic/01-simple-conversation.ts</span></span></code></pre></div><h3 id="getting-help" tabindex="-1">Getting Help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;Getting Help&quot;">​</a></h3><p>If you encounter issues:</p><ol><li>Check the specific example documentation</li><li>Verify your environment configuration</li><li>Ensure all dependencies are installed</li><li>Check the console for specific error messages</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Once setup is complete, explore the examples:</p><ol><li>Start with <a href="./basic-conversation.html">Basic Conversation</a></li><li>Try <a href="./ai-with-tools.html">AI with Tools</a></li><li>Explore <a href="./multi-provider.html">Multi-Provider Setup</a></li></ol><h2 id="environment-variables-reference" tabindex="-1">Environment Variables Reference <a class="header-anchor" href="#environment-variables-reference" aria-label="Permalink to &quot;Environment Variables Reference&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Variable</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>OPENAI_API_KEY</code></td><td>Yes</td><td>OpenAI API key for GPT models</td></tr><tr><td><code>ANTHROPIC_API_KEY</code></td><td>No</td><td>Anthropic API key for Claude models</td></tr><tr><td><code>GOOGLE_API_KEY</code></td><td>No</td><td>Google AI API key for Gemini models</td></tr></tbody></table><p>All examples will gracefully handle missing optional API keys by skipping provider-specific demonstrations.</p>`,55)]))}const u=a(t,[["render",l]]);export{k as __pageData,u as default};
