import{_ as a,c as e,o as i,ag as n}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Package Publishing Guide","description":"How to publish Robota SDK packages to npm","frontmatter":{"title":"Package Publishing Guide","description":"How to publish Robota SDK packages to npm","lang":"en-US"},"headers":[],"relativePath":"development/package-publishing.md","filePath":"development/package-publishing.md"}'),t={name:"development/package-publishing.md"};function l(p,s,o,r,h,c){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="package-publishing-guide" tabindex="-1">Package Publishing Guide <a class="header-anchor" href="#package-publishing-guide" aria-label="Permalink to &quot;Package Publishing Guide&quot;">​</a></h1><p>This guide explains how to build and publish Robota SDK packages to npm.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Robota SDK uses a monorepo structure with multiple packages:</p><ul><li><code>@robota-sdk/agents</code>: Comprehensive AI agent framework</li><li><code>@robota-sdk/openai</code>: OpenAI provider</li><li><code>@robota-sdk/anthropic</code>: Anthropic provider</li><li><code>@robota-sdk/google</code>: Google AI provider</li><li><code>@robota-sdk/agents</code>: Comprehensive AI agent framework with tools and plugins</li><li><code>@robota-sdk/sessions</code>: Session and chat management</li></ul><p>All packages are published under the <code>@robota-sdk</code> scope on npm.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Node.js 18 or newer</li><li>PNPM 8.15.4 (exact version)</li><li>npm account with access to the <code>@robota-sdk</code> organization</li></ul><h2 id="⚠️-important-publishing-rules" tabindex="-1">⚠️ Important Publishing Rules <a class="header-anchor" href="#⚠️-important-publishing-rules" aria-label="Permalink to &quot;⚠️ Important Publishing Rules&quot;">​</a></h2><h3 id="always-use-the-official-publishing-command" tabindex="-1"><strong>ALWAYS use the official publishing command:</strong> <a class="header-anchor" href="#always-use-the-official-publishing-command" aria-label="Permalink to &quot;**ALWAYS use the official publishing command:**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish:packages</span></span></code></pre></div><h3 id="❌-do-not-use-direct-pnpm-publish-commands" tabindex="-1"><strong>❌ DO NOT use direct pnpm publish commands:</strong> <a class="header-anchor" href="#❌-do-not-use-direct-pnpm-publish-commands" aria-label="Permalink to &quot;**❌ DO NOT use direct pnpm publish commands:**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DON&#39;T USE THESE:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-git-checks</span></span></code></pre></div><p><strong>Why?</strong> The <code>publish:packages</code> script includes essential pre-processing steps:</p><ul><li>README copying from docs to packages</li><li>TypeDoc documentation generation</li><li>Proper changeset version handling</li><li>Git tag management</li><li>Cleanup operations</li></ul><h2 id="publishing-process" tabindex="-1">Publishing Process <a class="header-anchor" href="#publishing-process" aria-label="Permalink to &quot;Publishing Process&quot;">​</a></h2><p>The publishing process consists of these main steps:</p><ol><li>Creating changesets</li><li>Building packages</li><li>Copying README files from docs directory</li><li>Publishing packages to npm</li><li>Pushing git tags</li><li>Cleaning up temporary files</li></ol><h3 id="step-1-create-a-changeset" tabindex="-1">Step 1: Create a Changeset <a class="header-anchor" href="#step-1-create-a-changeset" aria-label="Permalink to &quot;Step 1: Create a Changeset&quot;">​</a></h3><p>Create a changeset to describe your changes and specify version bumps:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span></span></code></pre></div><p>Follow the interactive prompts to:</p><ol><li>Select packages to include</li><li>Choose version bump types (patch, minor, or major)</li><li>Write a summary of changes (keep it concise and descriptive)</li></ol><h3 id="step-2-build-and-test" tabindex="-1">Step 2: Build and Test <a class="header-anchor" href="#step-2-build-and-test" aria-label="Permalink to &quot;Step 2: Build and Test&quot;">​</a></h3><p>Ensure all packages are built and tested:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typecheck</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h3 id="step-3-official-publishing-command" tabindex="-1">Step 3: Official Publishing Command <a class="header-anchor" href="#step-3-official-publishing-command" aria-label="Permalink to &quot;Step 3: Official Publishing Command&quot;">​</a></h3><p><strong>Use this command for all package publishing:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish:packages</span></span></code></pre></div><p>This command performs the following steps automatically:</p><ol><li><strong>TypeDoc Generation</strong>: Converts TypeScript docs to markdown</li><li><strong>README Copying</strong>: Copies README files from <code>docs/packages/</code> to each package</li><li><strong>Version Update</strong>: Applies changesets and updates package versions</li><li><strong>Dependency Install</strong>: Ensures all dependencies are updated</li><li><strong>Package Publishing</strong>: Publishes packages to npm with workspace dependency resolution</li><li><strong>Git Tag Pushing</strong>: Pushes version tags to the repository</li><li><strong>Cleanup</strong>: Removes temporary README files from packages</li></ol><h2 id="readme-management" tabindex="-1">README Management <a class="header-anchor" href="#readme-management" aria-label="Permalink to &quot;README Management&quot;">​</a></h2><p>README files are managed centrally in the <code>docs/packages/</code> directory:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/packages/</span></span>
<span class="line"><span>├── core/README.md</span></span>
<span class="line"><span>├── openai/README.md</span></span>
<span class="line"><span>├── anthropic/README.md</span></span>
<span class="line"><span>├── google/README.md</span></span>
<span class="line"><span>├── tools/README.md</span></span>
<span class="line"><span>└── sessions/README.md</span></span></code></pre></div><h3 id="automatic-readme-processing" tabindex="-1">Automatic README Processing <a class="header-anchor" href="#automatic-readme-processing" aria-label="Permalink to &quot;Automatic README Processing&quot;">​</a></h3><p>During publishing:</p><ol><li><strong>Copy Phase</strong>: README files are copied from <code>docs/packages/</code> to <code>packages/</code></li><li><strong>Publish Phase</strong>: Packages are published with the copied README files</li><li><strong>Cleanup Phase</strong>: Temporary README files are removed from <code>packages/</code></li></ol><p>This ensures:</p><ul><li>✅ Consistent documentation between docs site and npm packages</li><li>✅ No manual README management in package directories</li><li>✅ Single source of truth for package documentation</li></ul><h2 id="workspace-dependencies" tabindex="-1">Workspace Dependencies <a class="header-anchor" href="#workspace-dependencies" aria-label="Permalink to &quot;Workspace Dependencies&quot;">​</a></h2><p>The project uses <code>workspace:*</code> dependencies which are automatically resolved:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;peerDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;@robota-sdk/agents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;workspace:*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;@robota-sdk/agents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;workspace:*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>pnpm publish -r</strong> automatically converts these to actual version numbers during publishing.</p><h2 id="script-details" tabindex="-1">Script Details <a class="header-anchor" href="#script-details" aria-label="Permalink to &quot;Script Details&quot;">​</a></h2><h3 id="main-publishing-script-pnpm-run-publish-packages" tabindex="-1">Main Publishing Script (<code>pnpm run publish:packages</code>) <a class="header-anchor" href="#main-publishing-script-pnpm-run-publish-packages" aria-label="Permalink to &quot;Main Publishing Script (\`pnpm run publish:packages\`)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typedoc:convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme:copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git:push-tags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme:cleanup</span></span></code></pre></div><h3 id="readme-management-scripts" tabindex="-1">README Management Scripts <a class="header-anchor" href="#readme-management-scripts" aria-label="Permalink to &quot;README Management Scripts&quot;">​</a></h3><p><strong>Copy READMEs:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme:copy</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Runs: node scripts/copy-readme.cjs copy</span></span></code></pre></div><p><strong>Cleanup READMEs:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme:cleanup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Runs: node scripts/copy-readme.cjs cleanup</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="authentication-issues" tabindex="-1">Authentication Issues <a class="header-anchor" href="#authentication-issues" aria-label="Permalink to &quot;Authentication Issues&quot;">​</a></h3><p>If you encounter authentication issues with npm:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scope=@robota-sdk</span></span></code></pre></div><h3 id="publish-failed" tabindex="-1">Publish Failed <a class="header-anchor" href="#publish-failed" aria-label="Permalink to &quot;Publish Failed&quot;">​</a></h3><p>If publishing fails:</p><ol><li>Check if you have the right permissions on npm</li><li>Verify that all changesets have been properly applied</li><li>Ensure git working directory is clean</li><li>Run <code>pnpm build</code> to ensure all packages compile</li><li>Check for workspace dependency issues</li></ol><h3 id="workspace-dependency-errors" tabindex="-1">Workspace Dependency Errors <a class="header-anchor" href="#workspace-dependency-errors" aria-label="Permalink to &quot;Workspace Dependency Errors&quot;">​</a></h3><p>If you see errors about workspace dependencies:</p><ol><li>Ensure all <code>@robota-sdk</code> packages use <code>workspace:*</code> in peerDependencies</li><li>Use actual version ranges only for external dependencies</li><li>Run <code>pnpm install</code> to refresh workspace links</li></ol><h2 id="version-management" tabindex="-1">Version Management <a class="header-anchor" href="#version-management" aria-label="Permalink to &quot;Version Management&quot;">​</a></h2><ul><li><strong>patch</strong>: Bug fixes, documentation updates, dependency updates</li><li><strong>minor</strong>: New features, API additions (backward compatible)</li><li><strong>major</strong>: Breaking changes, API removals</li></ul><p>Example changeset summary formats:</p><ul><li><code>Fix workspace dependencies &amp; update README docs for all packages</code></li><li><code>Add new session management features to @robota-sdk/sessions</code></li><li><code>Breaking: Update AIProvider interface with new streaming API</code></li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Always test before publishing</strong>: Run full build and test suite</li><li><strong>Write meaningful changeset summaries</strong>: Describe what changed and why</li><li><strong>Use proper versioning</strong>: Follow semantic versioning guidelines</li><li><strong>Keep changesets focused</strong>: One changeset per logical change</li><li><strong>Update docs first</strong>: Ensure README files are current before publishing</li></ol><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Following this standardized process ensures consistent package publishing and versioning across the Robota SDK ecosystem. Always use <code>pnpm run publish:packages</code> for all package publishing to ensure proper preprocessing and cleanup.</p>`,69)]))}const k=a(t,[["render",l]]);export{g as __pageData,k as default};
