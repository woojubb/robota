import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"AI Providers","description":"","frontmatter":{},"headers":[],"relativePath":"providers/index.md","filePath":"providers/README.md"}'),r={name:"providers/index.md"};function n(l,i,o,p,h,d){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="ai-providers" tabindex="-1">AI Providers <a class="header-anchor" href="#ai-providers" aria-label="Permalink to &quot;AI Providers&quot;">​</a></h1><p>Robota SDK supports multiple AI providers, allowing you to switch between different models and services seamlessly.</p><h2 id="supported-providers" tabindex="-1">Supported Providers <a class="header-anchor" href="#supported-providers" aria-label="Permalink to &quot;Supported Providers&quot;">​</a></h2><ul><li><strong><a href="./openai.html">OpenAI</a></strong> - GPT-4, GPT-3.5, and other OpenAI models</li><li><strong><a href="./anthropic.html">Anthropic</a></strong> - Claude 3.5 Sonnet, Claude 3 Haiku, and other Claude models</li><li><strong><a href="./google.html">Google</a></strong> - Gemini Pro, Gemini Flash, and other Google AI models</li><li><strong><a href="./custom.html">Custom Providers</a></strong> - Build your own provider for any AI service</li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><p>Each provider has its own setup guide with examples. Start with the provider you want to use:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// OpenAI Example</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { OpenAIProvider } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> openaiClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ apiKey: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OPENAI_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAIProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(openaiClient);</span></span></code></pre></div><h2 id="provider-features" tabindex="-1">Provider Features <a class="header-anchor" href="#provider-features" aria-label="Permalink to &quot;Provider Features&quot;">​</a></h2><p>All providers support:</p><ul><li>✅ Text generation</li><li>✅ Function calling</li><li>✅ Streaming responses</li><li>✅ Conversation history</li><li>✅ Token usage tracking</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Choose a provider to get started, or learn about <a href="./../guide/function-calling.html">Function Calling</a> to add tools to your agents.</p>`,12)]))}const u=s(r,[["render",n]]);export{c as __pageData,u as default};
