import{_ as a,c as i,o as s,ag as t}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"Package Publishing Guide","description":"How to publish Robota SDK packages to npm","frontmatter":{"title":"Package Publishing Guide","description":"How to publish Robota SDK packages to npm","lang":"en-US"},"headers":[],"relativePath":"package-publishing.md","filePath":"package-publishing.md"}'),o={name:"package-publishing.md"};function l(n,e,p,r,h,c){return s(),i("div",null,e[0]||(e[0]=[t('<h1 id="package-publishing-guide" tabindex="-1">Package Publishing Guide <a class="header-anchor" href="#package-publishing-guide" aria-label="Permalink to &quot;Package Publishing Guide&quot;">​</a></h1><p>This guide explains how to build and publish Robota SDK packages to npm.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Robota SDK uses a monorepo structure with multiple packages:</p><ul><li><code>@robota-sdk/core</code>: Core functionality</li><li><code>@robota-sdk/openai</code>: OpenAI provider</li><li><code>@robota-sdk/anthropic</code>: Anthropic provider</li><li><code>@robota-sdk/mcp</code>: Model Context Protocol provider</li><li><code>@robota-sdk/tools</code>: Utility tools</li></ul><p>All packages are published under the <code>@robota-sdk</code> scope on npm.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Node.js 18 or newer</li><li>PNPM 8.0.0 or newer</li><li>npm account with access to the <code>@robota-sdk</code> organization</li></ul><h2 id="publishing-process" tabindex="-1">Publishing Process <a class="header-anchor" href="#publishing-process" aria-label="Permalink to &quot;Publishing Process&quot;">​</a></h2><p>The publishing process consists of these main steps:</p><ol><li>Building packages</li><li>Copying README files from the docs directory</li><li>Publishing packages with changesets</li><li>Pushing git tags</li><li>Cleaning up temporary README files</li></ol><h3 id="build-packages" tabindex="-1">Build Packages <a class="header-anchor" href="#build-packages" aria-label="Permalink to &quot;Build Packages&quot;">​</a></h3><p>Before publishing, ensure all packages are built:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="creating-a-changeset" tabindex="-1">Creating a Changeset <a class="header-anchor" href="#creating-a-changeset" aria-label="Permalink to &quot;Creating a Changeset&quot;">​</a></h3><p>Create a changeset to describe your changes and specify version bumps:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span></span></code></pre></div><p>Follow the interactive prompts to:</p><ol><li>Select packages to include</li><li>Choose version bump types (patch, minor, or major)</li><li>Write a summary of changes</li></ol><h3 id="version-packages" tabindex="-1">Version Packages <a class="header-anchor" href="#version-packages" aria-label="Permalink to &quot;Version Packages&quot;">​</a></h3><p>Update package versions based on changesets:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p>This command will:</p><ol><li>Update package.json versions</li><li>Update dependencies between packages</li><li>Update CHANGELOG.md files</li><li>Remove consumed changeset files</li></ol><h3 id="publish-packages" tabindex="-1">Publish Packages <a class="header-anchor" href="#publish-packages" aria-label="Permalink to &quot;Publish Packages&quot;">​</a></h3><p>We&#39;ve simplified the publishing process with a single command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish-packages</span></span></code></pre></div><p>This command performs the following steps:</p><ol><li>Copies README files from the docs directory to each package directory</li><li>Publishes the packages to npm using changesets</li><li>Pushes git tags to the remote repository</li><li>Cleans up temporary README files</li></ol><h2 id="readme-management" tabindex="-1">README Management <a class="header-anchor" href="#readme-management" aria-label="Permalink to &quot;README Management&quot;">​</a></h2><p>The README files are managed centrally in the <code>apps/docs/docs/packages</code> directory. During publishing:</p><ol><li>README files are copied to package directories</li><li>Packages are published with the README files</li><li>Temporary README files are removed from package directories</li></ol><p>This approach ensures consistency between documentation and npm package README files.</p><h2 id="script-implementation" tabindex="-1">Script Implementation <a class="header-anchor" href="#script-implementation" aria-label="Permalink to &quot;Script Implementation&quot;">​</a></h2><p>The publishing process is implemented with two main scripts:</p><h3 id="copy-readme-js" tabindex="-1">copy-readme.js <a class="header-anchor" href="#copy-readme-js" aria-label="Permalink to &quot;copy-readme.js&quot;">​</a></h3><p>Copies README files from the docs directory to package directories.</p><h3 id="cleanup-readme-js" tabindex="-1">cleanup-readme.js <a class="header-anchor" href="#cleanup-readme-js" aria-label="Permalink to &quot;cleanup-readme.js&quot;">​</a></h3><p>Removes temporary README files from package directories after publishing.</p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="authentication-issues" tabindex="-1">Authentication Issues <a class="header-anchor" href="#authentication-issues" aria-label="Permalink to &quot;Authentication Issues&quot;">​</a></h3><p>If you encounter authentication issues with npm:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scope=@robota-sdk</span></span></code></pre></div><h3 id="publish-failed" tabindex="-1">Publish Failed <a class="header-anchor" href="#publish-failed" aria-label="Permalink to &quot;Publish Failed&quot;">​</a></h3><p>If publishing fails:</p><ol><li>Check if you have the right permissions on npm</li><li>Verify that all changesets have been properly applied</li><li>Ensure git working directory is clean</li></ol><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Following this standardized process ensures consistent package publishing and versioning across the Robota SDK ecosystem.</p>',48)]))}const g=a(o,[["render",l]]);export{u as __pageData,g as default};
