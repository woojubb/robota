import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.BDwTZuFy.js";const k=JSON.parse('{"title":"Tools API","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/tools/modules.md","filePath":"api-reference/tools/modules.md"}'),n={name:"api-reference/tools/modules.md"};function l(o,e,r,h,d,p){return s(),a("div",null,e[0]||(e[0]=[i(`<p><a href="./../">Tools API</a> / Exports</p><h1 id="tools-api" tabindex="-1">Tools API <a class="header-anchor" href="#tools-api" aria-label="Permalink to &quot;Tools API&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><ul><li><a href="./classes/BaseTool.html">BaseTool</a></li><li><a href="./classes/FunctionRegistry.html">FunctionRegistry</a></li><li><a href="./classes/McpTool.html">McpTool</a></li><li><a href="./classes/OpenApiTool.html">OpenApiTool</a></li><li><a href="./classes/ToolRegistry.html">ToolRegistry</a></li><li><a href="./classes/ZodTool.html">ZodTool</a></li></ul><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./interfaces/BaseToolOptions.html">BaseToolOptions</a></li><li><a href="./interfaces/CreateToolOptions.html">CreateToolOptions</a></li><li><a href="./interfaces/FunctionCall.html">FunctionCall</a></li><li><a href="./interfaces/FunctionCallResult.html">FunctionCallResult</a></li><li><a href="./interfaces/FunctionDefinition.html">FunctionDefinition</a></li><li><a href="./interfaces/FunctionOptions.html">FunctionOptions</a></li><li><a href="./interfaces/FunctionSchema.html">FunctionSchema</a></li><li><a href="./interfaces/MCPClient.html">MCPClient</a></li><li><a href="./interfaces/McpToolOptions.html">McpToolOptions</a></li><li><a href="./interfaces/OpenApiToolOptions.html">OpenApiToolOptions</a></li><li><a href="./interfaces/Tool.html">Tool</a></li><li><a href="./interfaces/ToolFunction.html">ToolFunction</a></li><li><a href="./interfaces/ToolInterface.html">ToolInterface</a></li><li><a href="./interfaces/ToolParameter.html">ToolParameter</a></li><li><a href="./interfaces/ToolProvider.html">ToolProvider</a></li><li><a href="./interfaces/ToolResult.html">ToolResult</a></li><li><a href="./interfaces/ZodFunctionTool.html">ZodFunctionTool</a></li><li><a href="./interfaces/ZodFunctionToolProviderOptions.html">ZodFunctionToolProviderOptions</a></li><li><a href="./interfaces/ZodToolOptions.html">ZodToolOptions</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./modules.html#functionhandler">FunctionHandler</a></li><li><a href="./modules.html#functionresult">FunctionResult</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./modules.html#createfunction">createFunction</a></li><li><a href="./modules.html#createfunctionschema">createFunctionSchema</a></li><li><a href="./modules.html#createmcptoolprovider">createMcpToolProvider</a></li><li><a href="./modules.html#createopenapitoolprovider">createOpenAPIToolProvider</a></li><li><a href="./modules.html#createtool">createTool</a></li><li><a href="./modules.html#createzodfunctiontoolprovider">createZodFunctionToolProvider</a></li><li><a href="./modules.html#functionfromcallback">functionFromCallback</a></li><li><a href="./modules.html#zodfunctiontoschema">zodFunctionToSchema</a></li><li><a href="./modules.html#zodtojsonschema">zodToJsonSchema</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="functionhandler" tabindex="-1">FunctionHandler <a class="header-anchor" href="#functionhandler" aria-label="Permalink to &quot;FunctionHandler&quot;">​</a></h3><p>Ƭ <strong>FunctionHandler</strong>: (<code>args</code>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>context?</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;</p><p>Function call handler type</p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>args</code>, <code>context?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>args</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>any</code>&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function.ts#L378" target="_blank" rel="noreferrer">packages/tools/src/function.ts:378</a></p><hr><h3 id="functionresult" tabindex="-1">FunctionResult <a class="header-anchor" href="#functionresult" aria-label="Permalink to &quot;FunctionResult&quot;">​</a></h3><p>Ƭ <strong>FunctionResult</strong>&lt;<code>TResult</code>&gt;: <code>Object</code></p><p>Function result type</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TResult</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>TResult</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function.ts#L16" target="_blank" rel="noreferrer">packages/tools/src/function.ts:16</a></p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="createfunction" tabindex="-1">createFunction <a class="header-anchor" href="#createfunction" aria-label="Permalink to &quot;createFunction&quot;">​</a></h3><p>▸ <strong>createFunction</strong>&lt;<code>TParams</code>, <code>TResult</code>&gt;(<code>options</code>): <a href="./interfaces/ToolFunction.html"><code>ToolFunction</code></a>&lt;<code>TParams</code>, <code>TResult</code>&gt;</p><p>Create a function</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TParams</code></td><td style="text-align:left;"><code>unknown</code></td><td style="text-align:left;">function parameter type</td></tr><tr><td style="text-align:left;"><code>TResult</code></td><td style="text-align:left;"><code>unknown</code></td><td style="text-align:left;">function return result type</td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./interfaces/FunctionOptions.html"><code>FunctionOptions</code></a>&lt;<code>TParams</code>, <code>TResult</code>&gt;</td><td style="text-align:left;">Function options</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/ToolFunction.html"><code>ToolFunction</code></a>&lt;<code>TParams</code>, <code>TResult</code>&gt;</p><p>Created function object</p><p><strong><code>Function</code></strong></p><p>createFunction</p><p><strong><code>Description</code></strong></p><p>Creates a function that AI can invoke. You can define function name, description, parameter schema, and execution logic.</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { z } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zod&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createFunction } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getWeather</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;getWeather&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Get weather information for a specific location.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parameters: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    location: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Location to check weather (city name)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    unit: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;celsius&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fahrenheit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Temperature unit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Weather API call logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, condition: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sunny&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function.ts#L240" target="_blank" rel="noreferrer">packages/tools/src/function.ts:240</a></p><hr><h3 id="createfunctionschema" tabindex="-1">createFunctionSchema <a class="header-anchor" href="#createfunctionschema" aria-label="Permalink to &quot;createFunctionSchema&quot;">​</a></h3><p>▸ <strong>createFunctionSchema</strong>(<code>definition</code>): <code>ZodObject</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>ZodTypeAny</code>&gt;, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, {}, {}&gt;</p><p>Utility function to convert function schema to Zod schema</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>definition</code></td><td style="text-align:left;"><a href="./interfaces/FunctionDefinition.html"><code>FunctionDefinition</code></a></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ZodObject</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>ZodTypeAny</code>&gt;, <code>&quot;strip&quot;</code>, <code>ZodTypeAny</code>, {}, {}&gt;</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function.ts#L345" target="_blank" rel="noreferrer">packages/tools/src/function.ts:345</a></p><hr><h3 id="createmcptoolprovider" tabindex="-1">createMcpToolProvider <a class="header-anchor" href="#createmcptoolprovider" aria-label="Permalink to &quot;createMcpToolProvider&quot;">​</a></h3><p>▸ <strong>createMcpToolProvider</strong>(<code>mcpClient</code>): <a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>MCP(Model Context Protocol) based tool provider creation function</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>mcpClient</code></td><td style="text-align:left;"><a href="./interfaces/MCPClient.html"><code>MCPClient</code></a></td><td style="text-align:left;">MCP client instance</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>MCP-based tool provider object</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/mcp-tool-provider.ts#L22" target="_blank" rel="noreferrer">packages/tools/src/mcp-tool-provider.ts:22</a></p><hr><h3 id="createopenapitoolprovider" tabindex="-1">createOpenAPIToolProvider <a class="header-anchor" href="#createopenapitoolprovider" aria-label="Permalink to &quot;createOpenAPIToolProvider&quot;">​</a></h3><p>▸ <strong>createOpenAPIToolProvider</strong>(<code>openApiSpec</code>, <code>options?</code>): <a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>Create tool provider based on OpenAPI specification</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>openApiSpec</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">OpenAPI specification object or URL</td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Base URL configuration</td></tr><tr><td style="text-align:left;"><code>options.baseUrl?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>OpenAPI-based tool provider</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/openapi-tool-provider.ts#L11" target="_blank" rel="noreferrer">packages/tools/src/openapi-tool-provider.ts:11</a></p><hr><h3 id="createtool" tabindex="-1">createTool <a class="header-anchor" href="#createtool" aria-label="Permalink to &quot;createTool&quot;">​</a></h3><p>▸ <strong>createTool</strong>&lt;<code>TInput</code>, <code>TOutput</code>&gt;(<code>options</code>): <a href="./interfaces/Tool.html"><code>Tool</code></a>&lt;<code>TInput</code>, <code>TOutput</code>&gt;</p><p>Tool creation function</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>TInput</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>TOutput</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./interfaces/CreateToolOptions.html"><code>CreateToolOptions</code></a>&lt;<code>TInput</code>, <code>TOutput</code>&gt;</td><td style="text-align:left;">Tool creation options</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/Tool.html"><code>Tool</code></a>&lt;<code>TInput</code>, <code>TOutput</code>&gt;</p><p>Created tool</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weatherTool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;getWeather&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Get weather information for a specific location&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parameters: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;location&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Location (city name)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, required: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Weather API call logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, humidity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, conditions: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sunny&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/index.ts#L132" target="_blank" rel="noreferrer">packages/tools/src/index.ts:132</a></p><hr><h3 id="createzodfunctiontoolprovider" tabindex="-1">createZodFunctionToolProvider <a class="header-anchor" href="#createzodfunctiontoolprovider" aria-label="Permalink to &quot;createZodFunctionToolProvider&quot;">​</a></h3><p>▸ <strong>createZodFunctionToolProvider</strong>(<code>options</code>): <a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>Zod 스키마 기반 함수 도구 제공자를 생성합니다.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./interfaces/ZodFunctionToolProviderOptions.html"><code>ZodFunctionToolProviderOptions</code></a></td><td style="text-align:left;">함수 도구 제공자 옵션</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/ToolProvider.html"><code>ToolProvider</code></a></p><p>도구 제공자 인스턴스 (ToolProvider 인터페이스 구현)</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> calculatorTool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;add&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;두 숫자를 더합니다&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parameters: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    a: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;첫 번째 숫자&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;두 번째 숫자&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ result: a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createZodFunctionToolProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tools: { add: calculatorTool }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aiClient: openaiProvider,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  provider: provider,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  systemPrompt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;당신은 도움이 되는 계산기입니다.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function-tool-provider.ts#L50" target="_blank" rel="noreferrer">packages/tools/src/function-tool-provider.ts:50</a></p><hr><h3 id="functionfromcallback" tabindex="-1">functionFromCallback <a class="header-anchor" href="#functionfromcallback" aria-label="Permalink to &quot;functionFromCallback&quot;">​</a></h3><p>▸ <strong>functionFromCallback</strong>(<code>name</code>, <code>fn</code>, <code>description?</code>): <a href="./interfaces/ToolFunction.html"><code>ToolFunction</code></a>&lt;<code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>any</code>&gt;</p><p>Convert callback function to Function object</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Function name</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(...<code>args</code>: <code>any</code>[]) =&gt; <code>any</code></td><td style="text-align:left;">Callback function to convert</td></tr><tr><td style="text-align:left;"><code>description?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Function description</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./interfaces/ToolFunction.html"><code>ToolFunction</code></a>&lt;<code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;, <code>any</code>&gt;</p><p>Created function object</p><p><strong><code>Function</code></strong></p><p>functionFromCallback</p><p><strong><code>Description</code></strong></p><p>Converts a regular JavaScript function to a Function object that AI can invoke.</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { functionFromCallback } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> calculateSum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> functionFromCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;calculateSum&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;Calculate the sum of two numbers.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/function.ts#L311" target="_blank" rel="noreferrer">packages/tools/src/function.ts:311</a></p><hr><h3 id="zodfunctiontoschema" tabindex="-1">zodFunctionToSchema <a class="header-anchor" href="#zodfunctiontoschema" aria-label="Permalink to &quot;zodFunctionToSchema&quot;">​</a></h3><p>▸ <strong>zodFunctionToSchema</strong>&lt;<code>T</code>&gt;(<code>tool</code>): <code>Object</code></p><p>Zod 함수 도구를 Robota 호환 함수 스키마로 변환합니다.</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>ZodObject</code>&lt;<code>ZodRawShape</code>, <code>UnknownKeysParam</code>, <code>ZodTypeAny</code>, {}, {}&gt;</td></tr></tbody></table><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>tool</code></td><td style="text-align:left;"><a href="./interfaces/ZodFunctionTool.html"><code>ZodFunctionTool</code></a>&lt;<code>T</code>&gt;</td><td style="text-align:left;">Zod 기반 함수 도구 정의</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Robota 호환 함수 스키마</p><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>description</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>parameters</code></td><td style="text-align:left;">{ <code>properties</code>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; ; <code>required?</code>: <code>string</code>[] ; <code>type</code>: <code>string</code> }</td></tr><tr><td style="text-align:left;"><code>parameters.properties</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr><tr><td style="text-align:left;"><code>parameters.required?</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>parameters.type</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/zod-schema.ts#L122" target="_blank" rel="noreferrer">packages/tools/src/zod-schema.ts:122</a></p><hr><h3 id="zodtojsonschema" tabindex="-1">zodToJsonSchema <a class="header-anchor" href="#zodtojsonschema" aria-label="Permalink to &quot;zodToJsonSchema&quot;">​</a></h3><p>▸ <strong>zodToJsonSchema</strong>(<code>schema</code>): <code>Object</code></p><p>Zod 객체 스키마를 JSON 스키마로 변환합니다.</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>schema</code></td><td style="text-align:left;"><code>ZodObject</code>&lt;<code>ZodRawShape</code>, <code>UnknownKeysParam</code>, <code>ZodTypeAny</code>, {}, {}&gt;</td><td style="text-align:left;">변환할 Zod 객체 스키마</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>JSON 스키마 객체</p><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>properties</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr><tr><td style="text-align:left;"><code>required?</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> userSchema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;사용자 이름&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  age: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;사용자 나이&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  email: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;이메일 주소&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jsonSchema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> zodToJsonSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userSchema);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   type: &#39;object&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   properties: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     name: { type: &#39;string&#39;, description: &#39;사용자 이름&#39; },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     age: { type: &#39;number&#39;, description: &#39;사용자 나이&#39; },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     email: { type: &#39;string&#39;, description: &#39;이메일 주소&#39; }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   required: [&#39;name&#39;, &#39;age&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span></code></pre></div><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/e285193950af56eb8dd72e2f97203d5196e29e4d/packages/tools/src/zod-schema.ts#L38" target="_blank" rel="noreferrer">packages/tools/src/zod-schema.ts:38</a></p>`,157)]))}const g=t(n,[["render",l]]);export{k as __pageData,g as default};
