import{_ as e,c as a,o as i,ag as n}from"./chunks/framework.BDwTZuFy.js";const h=JSON.parse('{"title":"Guide","description":"Robota SDK Documentation Guide","frontmatter":{"title":"Guide","description":"Robota SDK Documentation Guide","lang":"en-US"},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),o={name:"guide/index.md"};function r(s,t,l,c,d,g){return i(),a("div",null,t[0]||(t[0]=[n('<h1 id="robota-sdk-guide" tabindex="-1">Robota SDK Guide <a class="header-anchor" href="#robota-sdk-guide" aria-label="Permalink to &quot;Robota SDK Guide&quot;">​</a></h1><p>Robota SDK is a powerful TypeScript library built with a modular Manager pattern architecture that makes it easy to create sophisticated AI agents. With Robota SDK, you can:</p><ul><li><strong>Build AI Agents with Manager Pattern</strong>: Clean separation of concerns with specialized managers</li><li><strong>Multi-Provider Support</strong>: Seamlessly work with OpenAI, Anthropic, and Google AI</li><li><strong>Type-Safe Function Calling</strong>: Zod schemas, MCP integration, and custom tool providers</li><li><strong>Built-in Analytics</strong>: Comprehensive usage tracking and request limit management</li><li><strong>Real-time Streaming</strong>: Streaming responses across all supported providers</li><li><strong>Conversation Management</strong>: Persistent history with configurable limits</li></ul><h2 id="documentation-sections" tabindex="-1">Documentation Sections <a class="header-anchor" href="#documentation-sections" aria-label="Permalink to &quot;Documentation Sections&quot;">​</a></h2><ul><li><strong><a href="./getting-started.html">Getting Started</a></strong> - Quick setup and basic usage</li><li><strong><a href="./core-concepts.html">Core Concepts</a></strong> - Understanding the Manager pattern architecture</li><li><strong><a href="./function-calling.html">Function Calling</a></strong> - Tool integration and function calling</li><li><strong><a href="./building-agents.html">Building Agents</a></strong> - Advanced agent development patterns</li></ul><h2 id="quick-navigation" tabindex="-1">Quick Navigation <a class="header-anchor" href="#quick-navigation" aria-label="Permalink to &quot;Quick Navigation&quot;">​</a></h2><p>Use the navigation on the left to explore the complete documentation or jump straight to:</p><ul><li><a href="./getting-started.html">Getting Started</a> - Begin with basic setup</li><li><a href="./../development-guidelines.html#architecture-patterns">Architecture Overview</a> - Understand the Manager pattern</li><li><a href="./../examples/examples.html">Examples</a> - See real-world usage patterns</li></ul>',8)]))}const p=e(o,[["render",r]]);export{h as __pageData,p as default};
