import{_ as a,c as e,o as i,ag as t}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Class: Robota","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/agents/classes/Robota.md","filePath":"api-reference/agents/classes/Robota.md"}'),n={name:"api-reference/agents/classes/Robota.md"};function l(h,s,r,o,d,p){return i(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../../">agents</a> / <a href="./../modules.html">Exports</a> / Robota</p><h1 id="class-robota" tabindex="-1">Class: Robota <a class="header-anchor" href="#class-robota" aria-label="Permalink to &quot;Class: Robota&quot;">â€‹</a></h1><p>Main AI agent implementation for the Robota SDK.</p><p>Robota is a comprehensive AI agent that integrates multiple AI providers, tools, and plugins into a unified conversational interface. Each instance is completely independent with its own managers and services - NO GLOBAL SINGLETONS are used.</p><p>Key Features:</p><ul><li>Multiple AI provider support (OpenAI, Anthropic, Google)</li><li>Function/tool calling with Zod schema validation</li><li>Plugin system for extensible functionality</li><li>Streaming response support</li><li>Conversation history management</li><li>Instance-specific resource management</li></ul><p><strong><code>Implements</code></strong></p><p>AgentInterface</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Robota } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/agents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { OpenAIProvider } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aiProviders: { openai: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAIProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ apiKey: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sk-...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentProvider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentModel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, how are you?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response);</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Robota, LoggingPlugin, UsagePlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/agents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { weatherTool, calculatorTool } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./my-tools&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AdvancedAgent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aiProviders: { openai: openaiProvider },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentProvider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentModel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tools: [weatherTool, calculatorTool],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LoggingPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ level: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UsagePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ trackTokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;What</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">s the weather in Tokyo?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tell me a story&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">â€‹</a></h2><ul><li><p><a href="./BaseAgent.html"><code>BaseAgent</code></a>&lt;<a href="./../interfaces/AgentConfig.html"><code>AgentConfig</code></a>, <a href="./../interfaces/RunOptions.html"><code>RunOptions</code></a>, <a href="./../modules.html#message"><code>Message</code></a>&gt;</p><p>â†³ <strong><code>Robota</code></strong></p></li></ul><h2 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">â€‹</a></h2><ul><li><a href="./../interfaces/AgentInterface.html"><code>AgentInterface</code></a></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">â€‹</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">â€‹</a></h3><ul><li><a href="./Robota.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h3><ul><li><a href="./Robota.html#name">name</a></li><li><a href="./Robota.html#version">version</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">â€‹</a></h3><ul><li><a href="./Robota.html#configure">configure</a></li><li><a href="./Robota.html#dispose">dispose</a></li><li><a href="./Robota.html#run">run</a></li><li><a href="./Robota.html#runstream">runStream</a></li><li><a href="./Robota.html#gethistory">getHistory</a></li><li><a href="./Robota.html#clearhistory">clearHistory</a></li><li><a href="./Robota.html#addplugin">addPlugin</a></li><li><a href="./Robota.html#removeplugin">removePlugin</a></li><li><a href="./Robota.html#getplugin">getPlugin</a></li><li><a href="./Robota.html#getplugins">getPlugins</a></li><li><a href="./Robota.html#getpluginnames">getPluginNames</a></li><li><a href="./Robota.html#registermodule">registerModule</a></li><li><a href="./Robota.html#unregistermodule">unregisterModule</a></li><li><a href="./Robota.html#getmodule">getModule</a></li><li><a href="./Robota.html#getmodulesbytype">getModulesByType</a></li><li><a href="./Robota.html#getmodules">getModules</a></li><li><a href="./Robota.html#getmodulenames">getModuleNames</a></li><li><a href="./Robota.html#hasmodule">hasModule</a></li><li><a href="./Robota.html#executemodule">executeModule</a></li><li><a href="./Robota.html#getmodulestats">getModuleStats</a></li><li><a href="./Robota.html#setmodel">setModel</a></li><li><a href="./Robota.html#getmodel">getModel</a></li><li><a href="./Robota.html#registertool">registerTool</a></li><li><a href="./Robota.html#unregistertool">unregisterTool</a></li><li><a href="./Robota.html#getconfig">getConfig</a></li><li><a href="./Robota.html#getstats">getStats</a></li><li><a href="./Robota.html#destroy">destroy</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">â€‹</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">â€‹</a></h3><p>â€¢ <strong>new Robota</strong>(<code>config</code>): <a href="./Robota.html"><code>Robota</code></a></p><p>Creates a new Robota agent instance with the new aiProviders array design.</p><p>The constructor performs synchronous initialization and validation. Async initialization (AI provider setup, tool registration) is deferred until the first run() call for optimal performance.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><a href="./../interfaces/AgentConfig.html"><code>AgentConfig</code></a></td><td style="text-align:left;">Configuration options for the agent</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><a href="./Robota.html"><code>Robota</code></a></p><p><strong><code>Throws</code></strong></p><p>When required configuration is missing or invalid</p><p><strong><code>Throws</code></strong></p><p>When configuration values are invalid</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CustomerSupport&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aiProviders: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAIProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ apiKey: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OPENAI_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AnthropicProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ apiKey: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ANTHROPIC_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaultModel: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tools: [emailTool, ticketTool],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LoggingPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ErrorHandlingPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#constructor">constructor</a></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L170" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:170</a></p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h2><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">â€‹</a></h3><p>â€¢ <code>Readonly</code> <strong>name</strong>: <code>string</code></p><p>The name of this agent instance</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L116" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:116</a></p><hr><h3 id="version" tabindex="-1">version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;version&quot;">â€‹</a></h3><p>â€¢ <code>Readonly</code> <strong>version</strong>: <code>string</code> = <code>&#39;1.0.0&#39;</code></p><p>The version of the Robota agent implementation</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L118" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:118</a></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">â€‹</a></h2><h3 id="configure" tabindex="-1">configure <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;configure&quot;">â€‹</a></h3><p>â–¸ <strong>configure</strong>(<code>config</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Configure the agent with type-safe configuration</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><a href="./../interfaces/AgentConfig.html"><code>AgentConfig</code></a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of" aria-label="Permalink to &quot;Implementation of&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentInterface.html">AgentInterface</a>.<a href="./../interfaces/AgentInterface.html#configure">configure</a></p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#configure">configure</a></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/abstracts/base-agent.ts#L28" target="_blank" rel="noreferrer">packages/agents/src/abstracts/base-agent.ts:28</a></p><hr><h3 id="dispose" tabindex="-1">dispose <a class="header-anchor" href="#dispose" aria-label="Permalink to &quot;dispose&quot;">â€‹</a></h3><p>â–¸ <strong>dispose</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Cleanup resources</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#dispose">dispose</a></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/abstracts/base-agent.ts#L86" target="_blank" rel="noreferrer">packages/agents/src/abstracts/base-agent.ts:86</a></p><hr><h3 id="run" tabindex="-1">run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;run&quot;">â€‹</a></h3><p>â–¸ <strong>run</strong>(<code>input</code>, <code>options?</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Execute a conversation turn with the AI agent.</p><p>This is the primary method for interacting with the agent. It processes user input, manages conversation history, executes any required tools, and returns the AI response. The method automatically initializes the agent on first use.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The user&#39;s message or prompt to send to the AI</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./../interfaces/RunOptions.html"><code>RunOptions</code></a></td><td style="text-align:left;">Optional configuration for this specific execution</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>string</code>&gt;</p><p>Promise that resolves to the AI&#39;s response as a string</p><p><strong><code>Throws</code></strong></p><p>When the agent configuration is invalid</p><p><strong><code>Throws</code></strong></p><p>When the AI provider encounters an error</p><p><strong><code>Throws</code></strong></p><p>When a tool execution fails</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, how are you?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Hello! I&#39;m doing well, thank you for asking...&quot;</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Analyze this data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sessionId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  userId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;john.doe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  metadata: { source: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web-app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, priority: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;high&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Complex request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToolExecutionError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tool failed:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error.toolName, error.message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="implementation-of-1" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-1" aria-label="Permalink to &quot;Implementation of&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentInterface.html">AgentInterface</a>.<a href="./../interfaces/AgentInterface.html#run">run</a></p><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#run">run</a></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L436" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:436</a></p><hr><h3 id="runstream" tabindex="-1">runStream <a class="header-anchor" href="#runstream" aria-label="Permalink to &quot;runStream&quot;">â€‹</a></h3><p>â–¸ <strong>runStream</strong>(<code>input</code>, <code>options?</code>): <code>AsyncGenerator</code>&lt;<code>string</code>, <code>void</code>, <code>undefined</code>&gt;</p><p>Execute a conversation turn with streaming response.</p><p>Similar to run() but returns an async generator that yields response chunks as they arrive from the AI provider. This enables real-time streaming of the AI&#39;s response for better user experience.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The user&#39;s message or prompt to send to the AI</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./../interfaces/RunOptions.html"><code>RunOptions</code></a></td><td style="text-align:left;">Optional configuration for this specific execution</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>AsyncGenerator</code>&lt;<code>string</code>, <code>void</code>, <code>undefined</code>&gt;</p><p>AsyncGenerator that yields string chunks of the AI response</p><p><strong><code>Throws</code></strong></p><p>When the agent configuration is invalid</p><p><strong><code>Throws</code></strong></p><p>When the AI provider encounters an error</p><p><strong><code>Throws</code></strong></p><p>When a tool execution fails</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tell me a story&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// New line after story</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fullResponse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Explain quantum computing&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  fullResponse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunk;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  updateUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Update UI in real-time</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Complete response:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fullResponse);</span></span></code></pre></div><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Complex request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    handleChunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Streaming failed:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error.message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="implementation-of-2" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-2" aria-label="Permalink to &quot;Implementation of&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentInterface.html">AgentInterface</a>.<a href="./../interfaces/AgentInterface.html#runstream">runStream</a></p><h4 id="overrides-2" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-2" aria-label="Permalink to &quot;Overrides&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#runstream">runStream</a></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L535" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:535</a></p><hr><h3 id="gethistory" tabindex="-1">getHistory <a class="header-anchor" href="#gethistory" aria-label="Permalink to &quot;getHistory&quot;">â€‹</a></h3><p>â–¸ <strong>getHistory</strong>(): <a href="./../modules.html#message"><code>Message</code></a>[]</p><p>Get the conversation history for this agent instance.</p><p>Returns an array of messages representing the complete conversation history for this agent&#39;s conversation session. The history includes user messages, assistant responses, and tool call results.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><a href="./../modules.html#message"><code>Message</code></a>[]</p><p>Array of Message objects representing the conversation history</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;What is 2 + 2?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;What about 3 + 3?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> history</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(history.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4 (2 user messages, 2 assistant responses)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(history[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].role); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;user&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(history[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].content); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;What is 2 + 2?&#39;</span></span></code></pre></div><h4 id="implementation-of-3" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-3" aria-label="Permalink to &quot;Implementation of&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentInterface.html">AgentInterface</a>.<a href="./../interfaces/AgentInterface.html#gethistory">getHistory</a></p><h4 id="overrides-3" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-3" aria-label="Permalink to &quot;Overrides&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#gethistory">getHistory</a></p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L601" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:601</a></p><hr><h3 id="clearhistory" tabindex="-1">clearHistory <a class="header-anchor" href="#clearhistory" aria-label="Permalink to &quot;clearHistory&quot;">â€‹</a></h3><p>â–¸ <strong>clearHistory</strong>(): <code>void</code></p><p>Clear the conversation history for this agent instance.</p><p>Removes all messages from the conversation history, starting fresh. This does not affect the agent&#39;s configuration or other state.</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;First message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2 (user + assistant)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clearHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><h4 id="implementation-of-4" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-4" aria-label="Permalink to &quot;Implementation of&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentInterface.html">AgentInterface</a>.<a href="./../interfaces/AgentInterface.html#clearhistory">clearHistory</a></p><h4 id="overrides-4" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-4" aria-label="Permalink to &quot;Overrides&quot;">â€‹</a></h4><p><a href="./BaseAgent.html">BaseAgent</a>.<a href="./BaseAgent.html#clearhistory">clearHistory</a></p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L630" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:630</a></p><hr><h3 id="addplugin" tabindex="-1">addPlugin <a class="header-anchor" href="#addplugin" aria-label="Permalink to &quot;addPlugin&quot;">â€‹</a></h3><p>â–¸ <strong>addPlugin</strong>(<code>plugin</code>): <code>void</code></p><p>Add a plugin to the agent at runtime.</p><p>Plugins provide extensible functionality through lifecycle hooks. This method allows dynamic addition of plugins after agent creation.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>plugin</code></td><td style="text-align:left;"><a href="./BasePlugin.html"><code>BasePlugin</code></a>&lt;<a href="./../interfaces/BasePluginOptions.html"><code>BasePluginOptions</code></a>, <a href="./../interfaces/PluginStats.html"><code>PluginStats</code></a>&gt;</td><td style="text-align:left;">The plugin instance to add</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { UsagePlugin, PerformancePlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/agents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> robota</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robota</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Add plugins dynamically</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UsagePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ trackTokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PerformancePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ trackMemory: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span></code></pre></div><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L655" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:655</a></p><hr><h3 id="removeplugin" tabindex="-1">removePlugin <a class="header-anchor" href="#removeplugin" aria-label="Permalink to &quot;removePlugin&quot;">â€‹</a></h3><p>â–¸ <strong>removePlugin</strong>(<code>pluginName</code>): <code>boolean</code></p><p>Remove a plugin from the agent by name.</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pluginName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the plugin to remove</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>boolean</code></p><p>true if the plugin was found and removed, false otherwise</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> removed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;usage-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (removed) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Plugin removed successfully&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Plugin not found&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L676" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:676</a></p><hr><h3 id="getplugin" tabindex="-1">getPlugin <a class="header-anchor" href="#getplugin" aria-label="Permalink to &quot;getPlugin&quot;">â€‹</a></h3><p>â–¸ <strong>getPlugin</strong>&lt;<code>T</code>&gt;(<code>pluginName</code>): <code>null</code> | <code>T</code></p><p>Get a specific plugin by name with type safety.</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./BasePlugin.html"><code>BasePlugin</code></a>&lt;<a href="./../interfaces/BasePluginOptions.html"><code>BasePluginOptions</code></a>, <a href="./../interfaces/PluginStats.html"><code>PluginStats</code></a>&gt; = <a href="./BasePlugin.html"><code>BasePlugin</code></a>&lt;<a href="./../interfaces/BasePluginOptions.html"><code>BasePluginOptions</code></a>, <a href="./../interfaces/PluginStats.html"><code>PluginStats</code></a>&gt;</td><td style="text-align:left;">The expected plugin type extending BasePlugin</td></tr></tbody></table><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pluginName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the plugin to retrieve</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>null</code> | <code>T</code></p><p>The plugin instance if found, null otherwise</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { UsagePlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/agents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> usagePlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.getPlugin\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UsagePlugin\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;usage-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (usagePlugin) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stats</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> usagePlugin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUsageStats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Token usage:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stats.totalTokens);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L702" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:702</a></p><hr><h3 id="getplugins" tabindex="-1">getPlugins <a class="header-anchor" href="#getplugins" aria-label="Permalink to &quot;getPlugins&quot;">â€‹</a></h3><p>â–¸ <strong>getPlugins</strong>(): <a href="./BasePlugin.html"><code>BasePlugin</code></a>&lt;<a href="./../interfaces/BasePluginOptions.html"><code>BasePluginOptions</code></a>, <a href="./../interfaces/PluginStats.html"><code>PluginStats</code></a>&gt;[]</p><p>Get all registered plugins.</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><a href="./BasePlugin.html"><code>BasePlugin</code></a>&lt;<a href="./../interfaces/BasePluginOptions.html"><code>BasePluginOptions</code></a>, <a href="./../interfaces/PluginStats.html"><code>PluginStats</code></a>&gt;[]</p><p>Array of all currently registered plugin instances</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Agent has \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} plugins registered\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`- \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} (\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">})\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L720" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:720</a></p><hr><h3 id="getpluginnames" tabindex="-1">getPluginNames <a class="header-anchor" href="#getpluginnames" aria-label="Permalink to &quot;getPluginNames&quot;">â€‹</a></h3><p>â–¸ <strong>getPluginNames</strong>(): <code>string</code>[]</p><p>Get all registered plugin names</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>string</code>[]</p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L727" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:727</a></p><hr><h3 id="registermodule" tabindex="-1">registerModule <a class="header-anchor" href="#registermodule" aria-label="Permalink to &quot;registerModule&quot;">â€‹</a></h3><p>â–¸ <strong>registerModule</strong>(<code>module</code>, <code>options?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Register a new module with the agent</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>module</code></td><td style="text-align:left;"><code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt;</td><td style="text-align:left;">The module instance to register</td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Registration options</td></tr><tr><td style="text-align:left;"><code>options.autoInitialize?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>options.validateDependencies?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L743" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:743</a></p><hr><h3 id="unregistermodule" tabindex="-1">unregisterModule <a class="header-anchor" href="#unregistermodule" aria-label="Permalink to &quot;unregisterModule&quot;">â€‹</a></h3><p>â–¸ <strong>unregisterModule</strong>(<code>moduleName</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Unregister a module from the agent</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the module to unregister</td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>True if module was unregistered, false if not found</p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L762" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:762</a></p><hr><h3 id="getmodule" tabindex="-1">getModule <a class="header-anchor" href="#getmodule" aria-label="Permalink to &quot;getModule&quot;">â€‹</a></h3><p>â–¸ <strong>getModule</strong>&lt;<code>T</code>&gt;(<code>moduleName</code>): <code>null</code> | <code>T</code></p><p>Get a module by name with type safety</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt; = <code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt;</td></tr></tbody></table><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the module to retrieve</td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>null</code> | <code>T</code></p><p>The module instance or null if not found</p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L781" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:781</a></p><hr><h3 id="getmodulesbytype" tabindex="-1">getModulesByType <a class="header-anchor" href="#getmodulesbytype" aria-label="Permalink to &quot;getModulesByType&quot;">â€‹</a></h3><p>â–¸ <strong>getModulesByType</strong>&lt;<code>T</code>&gt;(<code>moduleType</code>): <code>T</code>[]</p><p>Get modules by type</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt; = <code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt;</td></tr></tbody></table><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Type of modules to retrieve</td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>T</code>[]</p><p>Array of modules matching the type</p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L793" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:793</a></p><hr><h3 id="getmodules" tabindex="-1">getModules <a class="header-anchor" href="#getmodules" aria-label="Permalink to &quot;getModules&quot;">â€‹</a></h3><p>â–¸ <strong>getModules</strong>(): <code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt;[]</p><p>Get all registered modules</p><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>BaseModule</code>&lt;<code>BaseModuleOptions</code>, <code>ModuleStats</code>&gt;[]</p><p>Array of all registered modules</p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L804" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:804</a></p><hr><h3 id="getmodulenames" tabindex="-1">getModuleNames <a class="header-anchor" href="#getmodulenames" aria-label="Permalink to &quot;getModuleNames&quot;">â€‹</a></h3><p>â–¸ <strong>getModuleNames</strong>(): <code>string</code>[]</p><p>Get all registered module names</p><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>string</code>[]</p><p>Array of module names</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L815" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:815</a></p><hr><h3 id="hasmodule" tabindex="-1">hasModule <a class="header-anchor" href="#hasmodule" aria-label="Permalink to &quot;hasModule&quot;">â€‹</a></h3><p>â–¸ <strong>hasModule</strong>(<code>moduleName</code>): <code>boolean</code></p><p>Check if a module is registered</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the module to check</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>boolean</code></p><p>True if module is registered</p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L827" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:827</a></p><hr><h3 id="executemodule" tabindex="-1">executeModule <a class="header-anchor" href="#executemodule" aria-label="Permalink to &quot;executeModule&quot;">â€‹</a></h3><p>â–¸ <strong>executeModule</strong>(<code>moduleName</code>, <code>context</code>): <code>Promise</code>&lt;{ <code>success</code>: <code>boolean</code> ; <code>data?</code>: <code>ModuleResultData</code> ; <code>error?</code>: <code>Error</code> ; <code>duration?</code>: <code>number</code> }&gt;</p><p>Execute a module by name</p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the module to execute</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">Execution context</td></tr><tr><td style="text-align:left;"><code>context.executionId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>context.sessionId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>context.userId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>context.metadata?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>number</code> | <code>boolean</code> | <code>Date</code>&gt;</td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;{ <code>success</code>: <code>boolean</code> ; <code>data?</code>: <code>ModuleResultData</code> ; <code>error?</code>: <code>Error</code> ; <code>duration?</code>: <code>number</code> }&gt;</p><p>Module execution result</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L840" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:840</a></p><hr><h3 id="getmodulestats" tabindex="-1">getModuleStats <a class="header-anchor" href="#getmodulestats" aria-label="Permalink to &quot;getModuleStats&quot;">â€‹</a></h3><p>â–¸ <strong>getModuleStats</strong>(<code>moduleName</code>): <code>null</code> | { <code>totalExecutions</code>: <code>number</code> ; <code>successfulExecutions</code>: <code>number</code> ; <code>failedExecutions</code>: <code>number</code> ; <code>averageExecutionTime</code>: <code>number</code> ; <code>lastExecutionTime?</code>: <code>Date</code> }</p><p>Get module execution statistics</p><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>moduleName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the module</td></tr></tbody></table><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>null</code> | { <code>totalExecutions</code>: <code>number</code> ; <code>successfulExecutions</code>: <code>number</code> ; <code>failedExecutions</code>: <code>number</code> ; <code>averageExecutionTime</code>: <code>number</code> ; <code>lastExecutionTime?</code>: <code>Date</code> }</p><p>Module statistics or null if not found</p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L859" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:859</a></p><hr><h3 id="setmodel" tabindex="-1">setModel <a class="header-anchor" href="#setmodel" aria-label="Permalink to &quot;setModel&quot;">â€‹</a></h3><p>â–¸ <strong>setModel</strong>(<code>modelConfig</code>): <code>void</code></p><p>Set the current model configuration (complete replacement).</p><p>Updates the current AI provider, model, and related settings. This completely replaces the current model configuration with the new values.</p><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>modelConfig</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">New model configuration</td></tr><tr><td style="text-align:left;"><code>modelConfig.provider</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>modelConfig.model</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>modelConfig.temperature?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>modelConfig.maxTokens?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>modelConfig.topP?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>modelConfig.systemMessage?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>void</code></p><p><strong><code>Throws</code></strong></p><p>When the provider is not available</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Switch to a different provider and model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;anthropic&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;claude-3-opus&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  maxTokens: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Simple model change</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gpt-4-turbo&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L914" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:914</a></p><hr><h3 id="getmodel" tabindex="-1">getModel <a class="header-anchor" href="#getmodel" aria-label="Permalink to &quot;getModel&quot;">â€‹</a></h3><p>â–¸ <strong>getModel</strong>(): <code>Object</code></p><p>Get the current model configuration.</p><p>Returns the current AI provider, model, and related settings.</p><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Object</code></p><p>Current model configuration</p><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>provider</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>model</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>temperature?</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>maxTokens?</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>topP?</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>systemMessage?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Current: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">provider</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Temperature: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Max tokens: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxTokens</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L986" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:986</a></p><hr><h3 id="registertool" tabindex="-1">registerTool <a class="header-anchor" href="#registertool" aria-label="Permalink to &quot;registerTool&quot;">â€‹</a></h3><p>â–¸ <strong>registerTool</strong>(<code>tool</code>): <code>void</code></p><p>Register a new tool for function calling.</p><p>Adds a tool that the AI can call during conversations. The tool&#39;s schema defines its name, description, and parameters for the AI to understand.</p><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>tool</code></td><td style="text-align:left;"><a href="./BaseTool.html"><code>BaseTool</code></a>&lt;<a href="./../modules.html#basetoolparameters"><code>BaseToolParameters</code></a>, <a href="./../interfaces/ToolResult.html"><code>ToolResult</code></a>&gt;</td><td style="text-align:left;">The tool instance to register</td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { BaseTool } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@robota-sdk/agents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WeatherTool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;get_weather&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Get current weather for a location&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  get</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      description: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.description,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parameters: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;object&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        properties: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          location: { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;City name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        required: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;location&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Implementation here</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { temperature: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, condition: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sunny&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WeatherTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L1066" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:1066</a></p><hr><h3 id="unregistertool" tabindex="-1">unregisterTool <a class="header-anchor" href="#unregistertool" aria-label="Permalink to &quot;unregisterTool&quot;">â€‹</a></h3><p>â–¸ <strong>unregisterTool</strong>(<code>toolName</code>): <code>void</code></p><p>Unregister a tool by name.</p><p>Removes a previously registered tool, making it unavailable for future AI calls.</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-label="Permalink to &quot;Parameters&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>toolName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Name of the tool to unregister</td></tr></tbody></table><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;weather-tool&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stats</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Remaining tools:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stats.tools);</span></span></code></pre></div><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L1106" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:1106</a></p><hr><h3 id="getconfig" tabindex="-1">getConfig <a class="header-anchor" href="#getconfig" aria-label="Permalink to &quot;getConfig&quot;">â€‹</a></h3><p>â–¸ <strong>getConfig</strong>(): <a href="./../interfaces/AgentConfig.html"><code>AgentConfig</code></a></p><p>Get the current agent configuration.</p><p>Returns a copy of the current configuration object. Modifications to the returned object do not affect the agent - use updateConfig() to make changes.</p><h4 id="returns-25" tabindex="-1">Returns <a class="header-anchor" href="#returns-25" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><a href="./../interfaces/AgentConfig.html"><code>AgentConfig</code></a></p><p>Copy of the current AgentConfig</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Current model:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, config.currentModel);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Available providers:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config.aiProviders </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}));</span></span></code></pre></div><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L1126" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:1126</a></p><hr><h3 id="getstats" tabindex="-1">getStats <a class="header-anchor" href="#getstats" aria-label="Permalink to &quot;getStats&quot;">â€‹</a></h3><p>â–¸ <strong>getStats</strong>(): <code>Object</code></p><p>Get comprehensive agent statistics including providers, tools, plugins, modules, and performance data.</p><h4 id="returns-26" tabindex="-1">Returns <a class="header-anchor" href="#returns-26" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Object</code></p><p>Object containing all agent statistics and metadata</p><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>version</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>conversationId</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>providers</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>currentProvider</code></td><td style="text-align:left;"><code>null</code> | <code>string</code></td></tr><tr><td style="text-align:left;"><code>tools</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>plugins</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>modules</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>historyLength</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>historyStats</code></td><td style="text-align:left;"><code>AgentStatsMetadata</code></td></tr><tr><td style="text-align:left;"><code>uptime</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stats</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Agent: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} v\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Uptime: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uptime</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}ms\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Providers: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">providers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;, &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Tools: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;, &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Plugins: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;, &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Modules: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;, &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Messages: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">historyLength</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-28" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-28" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L1147" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:1147</a></p><hr><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy&quot;">â€‹</a></h3><p>â–¸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Clean up and dispose of the agent instance.</p><p>This method properly cleans up all resources, managers, and services to prevent memory leaks and ensure graceful shutdown.</p><h4 id="returns-27" tabindex="-1">Returns <a class="header-anchor" href="#returns-27" aria-label="Permalink to &quot;Returns&quot;">â€‹</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Clean shutdown</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robota.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">destroy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Agent destroyed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-29" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-29" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/woojubb/robota/blob/9154cd8ba55a6fd2e7454537438866cf45ce19d2/packages/agents/src/agents/robota.ts#L1261" target="_blank" rel="noreferrer">packages/agents/src/agents/robota.ts:1261</a></p>`,414)]))}const c=a(n,[["render",l]]);export{g as __pageData,c as default};
