import{_ as a,c as t,o,ag as r}from"./chunks/framework.BDwTZuFy.js";const f=JSON.parse('{"title":"Interface: PayloadLogger","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/openai/interfaces/PayloadLogger.md","filePath":"api-reference/openai/interfaces/PayloadLogger.md"}'),l={name:"api-reference/openai/interfaces/PayloadLogger.md"};function d(n,e,i,s,c,h){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../">openai</a> / <a href="./../modules.html">Exports</a> / PayloadLogger</p><h1 id="interface-payloadlogger" tabindex="-1">Interface: PayloadLogger <a class="header-anchor" href="#interface-payloadlogger" aria-label="Permalink to &quot;Interface: PayloadLogger&quot;">​</a></h1><p>PayloadLogger interface for logging OpenAI API payloads</p><p>This interface provides a contract for different logging implementations:</p><ul><li>FilePayloadLogger: Node.js file-based logging</li><li>ConsolePayloadLogger: Browser console-based logging</li><li>Custom implementations: User-defined loggers</li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./PayloadLogger.html#isenabled">isEnabled</a></li><li><a href="./PayloadLogger.html#logpayload">logPayload</a></li></ul><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="isenabled" tabindex="-1">isEnabled <a class="header-anchor" href="#isenabled" aria-label="Permalink to &quot;isEnabled&quot;">​</a></h3><p>▸ <strong>isEnabled</strong>(): <code>boolean</code></p><p>Check if logging is enabled</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>true if logging is active, false otherwise</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/a7b0d817811ea92fd05b5cad0e1cbb2ad2cea445/packages/openai/src/interfaces/payload-logger.ts#L17" target="_blank" rel="noreferrer">interfaces/payload-logger.ts:17</a></p><hr><h3 id="logpayload" tabindex="-1">logPayload <a class="header-anchor" href="#logpayload" aria-label="Permalink to &quot;logPayload&quot;">​</a></h3><p>▸ <strong>logPayload</strong>(<code>payload</code>, <code>type</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Log API payload data</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>OpenAILogData</code></td><td style="text-align:left;">The API request/response payload data</td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><code>&quot;chat&quot;</code> | <code>&quot;stream&quot;</code></td><td style="text-align:left;">Type of operation (&#39;chat&#39; or &#39;stream&#39;)</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/woojubb/robota/blob/a7b0d817811ea92fd05b5cad0e1cbb2ad2cea445/packages/openai/src/interfaces/payload-logger.ts#L24" target="_blank" rel="noreferrer">interfaces/payload-logger.ts:24</a></p>',27)]))}const p=a(l,[["render",d]]);export{f as __pageData,p as default};
