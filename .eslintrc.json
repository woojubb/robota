{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": [
      "./tsconfig.json",
      "./packages/*/tsconfig.json",
      "./packages/*/tsconfig.test.json"
    ]
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "globals": {
    "NodeJS": "readonly"
  },
  "rules": {
    // ==========================================
    // CRITICAL POLICY: ANY/UNKNOWN TYPE PROHIBITION
    // ==========================================
    // üö® NEVER MODIFY THESE SETTINGS üö®
    // These rules enforce zero tolerance for any/unknown types
    // Modification of these settings is STRICTLY PROHIBITED
    // Contact architecture team before any changes
    "@typescript-eslint/no-explicit-any": "error", // ‚ùå PROHIBITED: 'any' type violates Zero Any Policy. Use UniversalMessage, ChatOptions from '@robota-sdk/agents'. See .cursor/rules/logging-guidelines.mdc
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "unknown": "‚ùå PROHIBITED: Use of 'unknown' type is not allowed. Import specific types from '@robota-sdk/agents' (e.g., UniversalMessage, ChatOptions) or define explicit interfaces. Refer to .cursor/rules/logging-guidelines.mdc for examples.",
          "any": "‚ùå PROHIBITED: Use of 'any' type violates Zero Any Policy. Import specific types from '@robota-sdk/agents' or create typed interfaces. Follow patterns in packages/openai/src/provider.ts for reference.",
          "{}": "‚ùå PROHIBITED: Use of '{}' type is not allowed. Use 'Record<string, specific-type>' or define explicit interface. See .cursor/rules/typescript-type-safety-guidelines.mdc for alternatives."
        },
        "extendDefaults": true
      }
    ],
    // ==========================================
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "ignoreRestSiblings": true,
        "destructuredArrayIgnorePattern": "^_"
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/ban-ts-comment": "warn",
    "no-useless-catch": "warn",
    "no-console": "error", // ‚ùå PROHIBITED: Use SimpleLogger injection: constructor(logger = SilentLogger) {}. See .cursor/rules/logging-guidelines.mdc
    "no-redeclare": "error"
  },
  "overrides": [
    {
      "files": [
        "apps/examples/**/*",
        "examples/**/*"
      ],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "no-unused-vars": "off"
      }
    },
    {
      "files": [
        "**/*.test.ts",
        "**/*.test.tsx"
      ],
      "env": {
        "jest": true
      },
      "globals": {
        "describe": "readonly",
        "it": "readonly",
        "expect": "readonly",
        "beforeEach": "readonly",
        "afterEach": "readonly",
        "beforeAll": "readonly",
        "afterAll": "readonly",
        "vi": "readonly"
      },
      "rules": {
        "@typescript-eslint/no-unused-vars": "off",
        "no-unused-vars": "off",
        // ==========================================
        // CRITICAL POLICY: TEST FILES EXCEPTION
        // ==========================================
        // üö® LIMITED EXCEPTION FOR TEST FILES ONLY üö®
        // any/unknown types are allowed ONLY in test files
        // for mocking and testing purposes
        // This exception must NOT be extended to production code
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-types": "off",
        "no-console": "warn" // ‚ö†Ô∏è WARNING: Console usage in test files should be minimal. Use test framework assertions or mockable loggers for better isolation
        // ==========================================
      }
    }
  ],
  "ignorePatterns": [
    "website/**/*",
    "backup/**/*",
    "apps/web/**/*",
    "docs/**/*",
    "apps/docs/**/*",
    "dist",
    "node_modules"
  ]
}